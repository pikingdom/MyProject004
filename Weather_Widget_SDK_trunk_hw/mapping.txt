com.calendar.CommData.BaseCityInfo -> com.calendar.CommData.a:
    int id -> id
    java.lang.String mStrName -> a
    java.lang.String mStrCode -> b
    java.lang.String mStrProvName -> c
    int mSort -> d
    int mFlag -> e
    int getId() -> getId
    void setId(int) -> setId
    void setName(java.lang.String) -> setName
    java.lang.String getName() -> getName
    void setCode(java.lang.String) -> a
    java.lang.String getCode() -> a
    void setProvName(java.lang.String) -> b
    java.lang.String getProvName() -> b
    void setSort(int) -> a
    int getSort() -> c
    void setFromGps(int) -> b
    int getFromGps() -> d
com.calendar.CommData.CityInfo -> com.calendar.CommData.b:
    boolean bDeleteState -> f
    boolean isDeleteState() -> e
    void setDeleteState(boolean) -> a
com.calendar.CommData.CityStruct -> com.calendar.CommData.c:
    java.lang.String code -> g
    java.lang.String name -> name
    java.lang.String provName -> h
    int mGPS -> i
    int getGPS() -> f
    java.lang.String getProvName() -> b
    void setProvName(java.lang.String) -> b
    java.lang.String getCode() -> a
    void setCode(java.lang.String) -> a
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
com.calendar.CommData.CityWeatherInfo -> com.calendar.CommData.d:
    int id -> id
    java.lang.String mStrProvName -> c
    java.lang.String mStrText -> j
    java.lang.String mStrCode -> b
    com.calendar.CommData.RealTimeWeatherInfo mRealTimeWeather -> k
    com.calendar.CommData.DayWeatherInfo mWeatherInfo -> l
    com.calendar.CommData.WarningInfo mWarningInfo -> m
    com.calendar.CommData.SunInfo mSunInfo -> n
    com.calendar.CommData.PMIndex mPmIndex -> o
    java.lang.String mPublishTimeText -> p
    java.lang.String mNowWeatherTime -> q
    boolean mRefreshToView -> r
    boolean mIsForceUpdate -> s
    boolean mbFromBackup -> t
    boolean mUpdating -> u
    boolean mNetSuccess -> v
    boolean mLastIsNight -> w
    java.lang.String mWeatherIndex -> x
    int mType -> y
    int getId() -> getId
    java.lang.String getCityGMT() -> g
    boolean updateFailure() -> h
    void setCityJson(com.calendar.CommData.CityWeatherJson) -> a
    com.calendar.CommData.RealTimeWeatherInfo getRealTimeWeather() -> i
    com.calendar.CommData.DayWeatherInfo getWeatherInfo() -> j
    boolean isNight() -> k
    boolean dayNightChange() -> l
    com.calendar.CommData.WarningInfo getWarningInfo() -> m
    com.calendar.CommData.PMIndex getPmIndex() -> n
    java.lang.String getTemperatureValue() -> o
    java.lang.String getSaveTime() -> p
    boolean getIsRefreshToView() -> q
    void setIsRefreshToView$1385ff() -> r
    void setIsForceUpdate(boolean) -> b
    boolean isForceUpdate() -> s
    void setCityName(java.lang.String) -> c
    java.lang.String getCityName() -> t
    java.lang.String getCityCode() -> u
    void setFromBackup(boolean) -> c
    void setUpdating(boolean) -> d
    boolean isUpdating() -> v
    void setNetSuccess(boolean) -> e
    boolean isNetSuccess() -> w
    java.lang.String getNowWeatherTime() -> x
    void setRealTimeWeather(com.calendar.CommData.RealTimeWeatherInfo) -> a
    void setWeatherInfo(com.calendar.CommData.DayWeatherInfo) -> a
    void setWarningInfo(com.calendar.CommData.WarningInfo) -> a
    void setWeatherIndex(java.lang.String) -> d
    java.lang.String getWeatherIndex() -> y
    java.lang.String getPublishTime() -> z
    java.lang.String getPublishDate() -> A
com.calendar.CommData.CityWeatherJson -> com.calendar.CommData.e:
    java.lang.String mStrDayWeatherJson -> z
    java.lang.String mStrNowWeatherJson -> A
    java.lang.String mStrIndexJson -> B
    java.lang.String mStrSunJson -> C
    java.lang.String mStrWarningJson -> D
    java.lang.String mStrPMJson -> E
    java.lang.String mStrDayWeatherTime -> F
    java.lang.String mStrNowWeatherTime -> G
    java.lang.String mStrIndexTime -> H
    java.lang.String mStrWarnTime -> I
    java.lang.String mStrSunTime -> J
    java.lang.String mStrPMTime -> K
    void setDayWeatherJson(java.lang.String) -> e
    java.lang.String getDayWeatherJson() -> B
    void setNowWeatherJson(java.lang.String) -> f
    java.lang.String getNowWeatherJson() -> C
    void setIndexJson(java.lang.String) -> g
    java.lang.String getIndexJson() -> D
    java.lang.String getSunJson() -> E
    void setSunJson(java.lang.String) -> h
    java.lang.String getWarningJson() -> F
    void setWarningJson(java.lang.String) -> i
    java.lang.String getPMJson() -> G
    void setPMJson(java.lang.String) -> j
    java.lang.String getDayWeatherTime() -> H
    void setDayWeatherTime(java.lang.String) -> k
    java.lang.String getNowWeatherTime() -> x
    void setNowWeatherTime(java.lang.String) -> l
    java.lang.String getIndexTime() -> I
    void setIndexTime(java.lang.String) -> m
    java.lang.String getWarnTime() -> J
    void setWarnTime(java.lang.String) -> n
    java.lang.String getSunTime() -> K
    void setSunTime(java.lang.String) -> o
    java.lang.String getPMTime() -> L
    void setPMTime(java.lang.String) -> p
com.calendar.CommData.DateInfo -> com.calendar.CommData.f:
    int year -> year
    int month -> month
    int day -> L
    int hour -> hour
    int minute -> minute
    int second -> second
    boolean isLeep -> M
    void fromDate(java.util.Date) -> a
com.calendar.CommData.DayWeatherInfo -> com.calendar.CommData.g:
    java.text.SimpleDateFormat DATE_FORMAT_MD -> N
    java.text.SimpleDateFormat DATE_FORMAT_MD2 -> O
    int mId -> P
    java.lang.String mCityCode -> Q
    java.lang.String mStrTime -> R
    java.lang.String mNowWeatherInfo -> S
    java.lang.String mUv -> T
    java.lang.String mUvValue -> U
    java.util.ArrayList mDays -> V
    boolean mIsOldData -> W
    java.lang.String mGMT -> X
    void setId(int) -> setId
    void setCityCode(java.lang.String) -> q
    java.lang.String getNowUv() -> M
    java.lang.String getNowWeather() -> N
    java.util.ArrayList getDays() -> O
    boolean checkData(java.lang.String) -> r
    boolean isNewJson(org.json.JSONObject) -> a
    boolean oldJsonAnalysis(org.json.JSONObject,java.lang.String) -> a
    void initDay() -> P
    boolean newJsonAnalysis(org.json.JSONObject,java.lang.String) -> b
    boolean setJsonString(java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String getTempValue(java.lang.String) -> s
com.calendar.CommData.DayWeatherInfo$DayInfo -> com.calendar.CommData.h:
    java.lang.String week -> Y
    java.lang.String date -> Z
    java.lang.String date2 -> aa
    java.lang.String info -> info
    java.lang.String temperature -> ab
    java.lang.String tempOrg -> ac
    com.calendar.CommData.DayWeatherInfo$TempInfo tempInfo -> ad
    com.calendar.CommData.DayWeatherInfo this$0 -> ae
com.calendar.CommData.DayWeatherInfo$TempInfo -> com.calendar.CommData.i:
    java.lang.String strDayTemp -> af
    java.lang.String strNightTemp -> ag
    java.lang.String strDayWeather -> ah
    java.lang.String strNightWeather -> ai
    com.calendar.CommData.DayWeatherInfo this$0 -> ae
com.calendar.CommData.PMIndex -> com.calendar.CommData.j:
    com.calendar.CommData.PMIndex$PMIndexInfo USSource -> aj
    com.calendar.CommData.PMIndex$PMIndexInfo GovSource -> ak
    int pmSourceInfo -> al
    int getSourceInfo() -> Q
    com.calendar.CommData.PMIndex$PMIndexInfo getUSSource() -> R
    com.calendar.CommData.PMIndex$PMIndexInfo getGovSource() -> S
    int getGovAirGrdLevel() -> T
    int getUSAirGrdLevel() -> U
    boolean setJsonString(java.lang.String) -> t
    java.lang.String access$0(java.lang.String) -> u
com.calendar.CommData.PMIndex$PMIndexInfo -> com.calendar.CommData.k:
    java.lang.String airGrd -> am
    java.lang.String hint -> an
    java.lang.String advice -> ao
    java.lang.String other -> ap
    java.lang.String pm25 -> aq
    java.lang.String pm10 -> ar
    java.lang.String so2 -> as
    java.lang.String no2 -> at
    java.lang.String rank -> au
    java.lang.String sourceName -> av
    int airLevel -> aw
    com.calendar.CommData.PMIndex this$0 -> ax
    java.lang.String getSourceName() -> V
    void setSourceName(java.lang.String) -> v
    java.lang.String getAirGrd() -> W
    java.lang.String getHint() -> X
    java.lang.String getPM25() -> Y
    boolean isAvailable() -> isAvailable
    boolean setJsonObject(org.json.JSONObject) -> b
    java.lang.String access$0(com.calendar.CommData.PMIndex$PMIndexInfo) -> a
    void access$1(com.calendar.CommData.PMIndex$PMIndexInfo,int) -> a
com.calendar.CommData.RealTimeWeatherInfo -> com.calendar.CommData.l:
    java.lang.String mCityCode -> Q
    java.lang.String mTempString -> ay
    java.lang.String mTempValue -> az
    java.lang.String mWind -> aA
    java.lang.String mHumidity -> aB
    java.lang.String mHumidityValue -> aC
    java.lang.String mUv -> T
    java.lang.String mWeather -> aD
    java.lang.String mStrTime -> R
    java.lang.String mGMT -> X
    boolean checkData(java.lang.String) -> r
    boolean isNewJson(org.json.JSONObject) -> a
    boolean setJsonString(java.lang.String,java.lang.String) -> a
    boolean newJsonAnalysis(org.json.JSONObject) -> c
    boolean oldJsonAnalysis(org.json.JSONObject) -> d
    void setCityCode(java.lang.String) -> q
    java.lang.String getTempValue() -> Z
    java.lang.String getWind() -> aa
    java.lang.String getHumidity() -> ab
    java.lang.String getHumidityValue() -> ac
    java.lang.String getUv() -> ad
    void setUv(java.lang.String) -> w
    java.lang.String getNowWeather() -> N
    void setNowWeather(java.lang.String) -> x
    java.lang.String getTime() -> ae
com.calendar.CommData.SendSuggestInfo -> com.calendar.CommData.m:
    java.lang.String KEY -> KEY
    java.lang.String productid -> aE
    java.lang.String Product -> aF
    java.lang.String OS -> aG
    java.lang.String Os_version -> aH
    java.lang.String App_version -> aI
    java.lang.String Type -> aJ
    java.lang.String localid -> aK
    java.lang.String questno -> aL
    java.lang.String quest -> aM
    java.lang.String answer -> aN
    java.lang.String ask_time -> aO
    java.lang.String answer_time -> aP
    int flag -> aQ
    java.lang.String cudate -> aR
    void setProductid(java.lang.String) -> y
    void setProduct(java.lang.String) -> z
    void setOS(java.lang.String) -> A
    void setOs_version(java.lang.String) -> B
    void setApp_version(java.lang.String) -> C
    void setType(java.lang.String) -> D
    void setLocalid(java.lang.String) -> E
    java.lang.String getQuestno() -> af
    void setQuestno(java.lang.String) -> F
    java.lang.String getQuest() -> ag
    void setQuest(java.lang.String) -> G
    java.lang.String getAnswer() -> ah
    void setAnswer(java.lang.String) -> H
    java.lang.String getAsk_time() -> ai
    void setAsk_time(java.lang.String) -> I
    java.lang.String getAnswer_time() -> aj
    void setAnswer_time(java.lang.String) -> J
    int getFlag() -> ak
    void setFlag(int) -> c
    void setCudate(java.lang.String) -> K
    org.json.JSONObject ToJsonObject() -> al
com.calendar.CommData.SuggestInfo -> com.calendar.CommData.n:
    java.lang.String suggest -> aS
    java.lang.String respond -> aT
    java.lang.String suggestDate -> aU
    java.lang.String respondDate -> aV
    java.lang.String getSuggest() -> am
    void setSuggest(java.lang.String) -> L
    java.lang.String getRespond() -> an
    void setRespond(java.lang.String) -> M
    java.lang.String getSuggestDate() -> ao
    void setSuggestDate(java.lang.String) -> N
    java.lang.String getRespondDate() -> ap
    void setRespondDate(java.lang.String) -> O
com.calendar.CommData.SunInfo -> com.calendar.CommData.o:
    java.util.Date sunrise -> aW
    java.util.Date sunset -> aX
    java.util.Date mDate -> aY
    java.lang.String mGMT -> X
    boolean mIsToday -> aZ
    java.util.Date getSunrise() -> aq
    java.util.Date getSunset() -> ar
    boolean isToday() -> as
    java.lang.String getGMT() -> at
    void setJsonString(java.lang.String) -> P
com.calendar.CommData.WarningInfo -> com.calendar.CommData.p:
    java.lang.String sWeather -> ba
    java.lang.String sColor -> bb
    java.lang.String sGrade -> bc
    java.lang.String sContent -> bd
    java.lang.String sStandard -> be
    java.lang.String sGuide -> bf
    java.lang.String sImgUrl -> bg
    java.lang.String sTime -> bh
    java.lang.String sCity -> bi
    int id -> id
    void setCity(java.lang.String) -> Q
    java.lang.String getWeather() -> au
    java.lang.String getColor() -> av
    java.lang.String getImgUrl() -> aw
    boolean setJsonString(java.lang.String) -> t
    boolean setJsonArrayFirst(java.lang.String) -> R
com.calendar.CommData.YjcInfo -> com.calendar.CommData.q:
    java.lang.String strYi -> bj
    java.lang.String strJi -> bk
    java.lang.String strChong -> bl
    java.lang.String getStrYi() -> ax
    void setStrYi(java.lang.String) -> S
    java.lang.String getStrJi() -> ay
    void setStrJi(java.lang.String) -> T
    java.lang.String getStrChong() -> az
    void setStrChong(java.lang.String) -> U
com.nd.android.update.DowningTaskItem -> com.nd.android.update.a:
    java.lang.String softName -> bm
    java.lang.String softUrl -> bn
    java.lang.String downloadDirPath -> bo
    java.lang.String downloadFileName -> bp
    int downloadIco -> bq
    int notificationId -> br
    android.app.Notification notification -> bs
    java.io.File downloadDir -> bt
    java.io.File downloadFile -> bu
    int state -> state
    void setSoftName(java.lang.String) -> V
    void setSoftUrl(java.lang.String) -> W
    void setDownloadDirPath(java.lang.String) -> X
    void setDownloadFileName(java.lang.String) -> Y
    void setDownloadIco(int) -> d
    void setSoftUid(int) -> e
    void setDownloadDir(java.io.File) -> a
    void setDownloadFile(java.io.File) -> b
    java.lang.String getSoftUrl() -> aA
    java.lang.String getSoftName() -> aB
    java.lang.String getDownLoadDirPath() -> aC
    int getDownLoadIcon() -> aD
    int getUid() -> getUid
    java.lang.String getDownloadFileName() -> aE
    java.io.File getDownloadDir() -> aF
    java.io.File getDownloadFile() -> aG
com.nd.android.update.DownloadService -> com.nd.android.update.DownloadService:
    android.content.Context mContext -> mContext
    int UPDATE_GAP -> bv
    android.app.NotificationManager notificationManager -> bw
    android.app.PendingIntent homePendingIntent -> bx
    com.nd.android.update.DownloadService$DownThread downThread -> by
    boolean running -> bz
    java.util.concurrent.ConcurrentLinkedQueue downList -> bA
    java.util.concurrent.ConcurrentHashMap itemMap -> bB
    android.os.Handler downloadHandler -> bC
    void onCreate() -> onCreate
    void onDestroy() -> onDestroy
    void onStart(android.content.Intent,int) -> onStart
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void doCmd(android.content.Intent) -> a
    boolean InitDownload(com.nd.android.update.DowningTaskItem) -> a
    boolean PreDownload(com.nd.android.update.DowningTaskItem) -> b
    void addDownTask(android.content.Context,com.nd.android.update.DowningTaskItem) -> a
    void UpdateNotificationView(com.nd.android.update.DowningTaskItem,int) -> a
    void ClearNotification(int) -> f
    boolean downloadFile(java.lang.String) -> Z
    long getCurrentSize(java.io.File) -> c
    android.os.IBinder onBind(android.content.Intent) -> onBind
    java.net.HttpURLConnection getConnection(java.lang.String) -> aa
    android.content.Context access$0(com.nd.android.update.DownloadService) -> a
    void access$1(com.nd.android.update.DownloadService,boolean,com.nd.android.update.DowningTaskItem,android.app.PendingIntent) -> a
    java.util.concurrent.ConcurrentHashMap access$2(com.nd.android.update.DownloadService) -> b
    boolean access$3(com.nd.android.update.DownloadService) -> c
    void access$4(com.nd.android.update.DownloadService,boolean) -> a
    java.util.concurrent.ConcurrentLinkedQueue access$5(com.nd.android.update.DownloadService) -> d
    android.os.Handler access$6(com.nd.android.update.DownloadService) -> e
    boolean access$7(com.nd.android.update.DownloadService,com.nd.android.update.DowningTaskItem) -> a
    boolean access$8$1be9aeae(com.nd.android.update.DowningTaskItem) -> c
    boolean access$9(com.nd.android.update.DownloadService,java.lang.String) -> a
com.nd.android.update.DownloadService$1 -> com.nd.android.update.b:
    com.nd.android.update.DownloadService this$0 -> bD
    void handleMessage(android.os.Message) -> handleMessage
com.nd.android.update.DownloadService$DownThread -> com.nd.android.update.c:
    com.nd.android.update.DownloadService this$0 -> bD
    void run() -> run
com.nd.calendar.Control.CalendarContext -> com.nd.calendar.Control.a:
    android.content.Context m_context -> bE
    com.nd.calendar.Control.CalendarContext g_Instance -> bF
    com.nd.calendar.module.ICoustoModule m_CounstoModule -> bG
    com.nd.calendar.module.IHttpModle m_HttpModle -> bH
    com.nd.calendar.module.IUserModule m_UserModule -> bI
    com.nd.calendar.module.IGpsSeverModule m_GpsSeverModule -> bJ
    com.nd.calendar.module.WeatherModule mWeatherModule -> bK
    com.nd.calendar.module.CalendarModule mCalendarModule -> bL
    com.nd.calendar.dbrepoist.IDatabaseRef dbRefUser -> bM
    com.nd.calendar.dbrepoist.IDatabaseRef dbRefCustom -> bN
    com.nd.calendar.Control.CalendarContext getInstance(android.content.Context) -> a
    com.nd.calendar.module.ICoustoModule Get_CoustoMdl_Interface() -> aH
    com.nd.calendar.module.WeatherModule Get_WeatherMdl_Interface() -> aI
    com.nd.calendar.module.IUserModule Get_UserMdl_Interface() -> aJ
    com.nd.calendar.module.CalendarModule Get_CalendarMdl_Interface() -> aK
    com.nd.calendar.dbrepoist.IDatabaseRef GetDbAccessItf(int) -> g
    com.nd.calendar.module.IHttpModle Get_HttpMdl_Interface() -> aL
com.nd.calendar.Control.CityListAdapter -> com.nd.calendar.Control.b:
    android.content.Context mContext -> mContext
    java.util.List cityList -> bO
    int mTextColor -> bP
    int mTextSize -> bQ
    android.view.LayoutInflater mInflater -> bR
    android.graphics.drawable.Drawable mGpsDrawable -> bS
    void setData(java.util.List) -> a
    java.util.List getData() -> aM
    void setTextColor(int) -> setTextColor
    void setTextSize(int) -> h
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.nd.calendar.Control.DownHighPicControler -> com.nd.calendar.Control.c:
    java.lang.String DOWN_URL -> bT
    com.nd.calendar.Control.DownHighPicControler _instance -> bU
    com.nd.calendar.Control.DownHighPicControler getInstance(android.content.Context) -> b
    void finishDownload$53cdd136() -> aN
com.nd.calendar.Control.DownloadControler -> com.nd.calendar.Control.d:
    android.content.Context mContext -> mContext
    java.io.File mDir -> bV
    java.lang.String mUrl -> bW
    boolean mUseCalendarIco -> bX
    java.lang.String mZipFile -> bY
    java.util.Stack mStack -> bZ
    java.util.ArrayList mTopTask -> ca
    com.nd.calendar.Control.DownloadControler$downWipThread mDownWipThread -> cb
    void finishDownload$53cdd136() -> aN
    void startDown() -> aO
    void addTopTask(java.lang.String) -> ab
    void startThread() -> aP
com.nd.calendar.Control.DownloadControler$downWipThread -> com.nd.calendar.Control.e:
    boolean mIsPause -> cc
    com.nd.calendar.Control.DownloadControler this$0 -> cd
    void run() -> run
    void pause() -> pause
    void nofityThread() -> aQ
    boolean isPause() -> aR
    boolean getImageFromCalendar(java.lang.String,java.io.File) -> a
com.nd.calendar.Control.DragListAdapter -> com.nd.calendar.Control.f:
    int mMode -> ce
    android.view.LayoutInflater mInflater -> bR
    java.util.List m_listInfo -> cf
    int getMode() -> getMode
    void setMode(int) -> setMode
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void setDeleteCheck(android.view.View) -> a
com.nd.calendar.Control.DragListAdapter$ViewHolder -> com.nd.calendar.Control.g:
    android.widget.TextView textView -> cg
    android.widget.TextView tvNote -> ch
    android.widget.ImageView imageNormal -> ci
    android.widget.ImageView imageDrag -> cj
    android.widget.ImageView imagePosition -> ck
    android.widget.CheckBox checkDel -> cl
    com.nd.calendar.Control.DragListAdapter this$0 -> cm
com.nd.calendar.Control.DragListViewListener -> com.nd.calendar.Control.h:
    void OnDrop(int,int) -> a
com.nd.calendar.Control.GetWeatherControler -> com.nd.calendar.Control.i:
    java.lang.String TAG -> TAG
    android.content.Context mContext -> mContext
    android.os.Handler mHandler -> mHandler
    com.nd.calendar.Control.GetWeatherControler$GetWeatherThread mGetWeatherThread -> cn
    com.nd.calendar.module.WeatherModule weatherModle -> co
    int mMsgInProcess -> cp
    int mMsgErrorTime -> cq
    int mMsgFinish -> cr
    int mMsgWarningFinish -> cs
    com.nd.calendar.Control.GetWeatherControler _instance -> ct
    com.nd.calendar.Control.GetWeatherControler getInstance(android.content.Context) -> c
    void setHandler(android.os.Handler) -> a
    void setFinishMsg$13462e() -> aS
    void setRefreshInProcessMsg$13462e() -> aT
    void setWarnFinishMsg$13462e() -> aU
    void setErrorTimeMsg$13462e() -> aV
    void addTask(com.calendar.CommData.CityWeatherInfo) -> a
    void addTopTask(com.calendar.CommData.CityWeatherInfo) -> b
    boolean weatherThreadIsAlive() -> aW
    void startWeatherThread() -> aX
    void addTasks(java.util.List) -> b
    void clearTask() -> aY
    com.nd.calendar.module.WeatherModule access$0(com.nd.calendar.Control.GetWeatherControler) -> a
    android.os.Handler access$1(com.nd.calendar.Control.GetWeatherControler) -> b
    int access$2(com.nd.calendar.Control.GetWeatherControler) -> c
    int access$3(com.nd.calendar.Control.GetWeatherControler) -> d
    int access$4(com.nd.calendar.Control.GetWeatherControler) -> e
    int access$5(com.nd.calendar.Control.GetWeatherControler) -> f
com.nd.calendar.Control.GetWeatherControler$GetWeatherThread -> com.nd.calendar.Control.j:
    boolean mPause -> cu
    java.util.Stack mStack -> bZ
    com.nd.calendar.Control.GetWeatherControler this$0 -> cv
    void run() -> run
    void nofityThread() -> aQ
    void addTask(com.calendar.CommData.CityWeatherInfo) -> a
    void addTopTask(com.calendar.CommData.CityWeatherInfo) -> b
    boolean isPause() -> aR
    void clearTask() -> aY
com.nd.calendar.Control.GetWeatherIcoControler -> com.nd.calendar.Control.k:
    java.lang.String DOWN_URL -> bT
    com.nd.calendar.Control.GetWeatherIcoControler _instance -> cw
    com.nd.calendar.Control.GetWeatherIcoControler getInstance(android.content.Context) -> d
    void finishDownload$53cdd136() -> aN
com.nd.calendar.Control.ICalendarContext -> com.nd.calendar.Control.l:
    com.nd.calendar.module.IHttpModle Get_HttpMdl_Interface() -> aL
    com.nd.calendar.module.ICoustoModule Get_CoustoMdl_Interface() -> aH
    com.nd.calendar.module.IUserModule Get_UserMdl_Interface() -> aJ
    com.nd.calendar.module.WeatherModule Get_WeatherMdl_Interface() -> aI
    com.nd.calendar.module.CalendarModule Get_CalendarMdl_Interface() -> aK
com.nd.calendar.Control.ListViewAdapter -> com.nd.calendar.Control.m:
    android.view.LayoutInflater mInflater -> bR
    int mMode -> ce
    int mTextColor -> bP
    void setMode$13462e() -> aZ
    void setTextColor(int) -> setTextColor
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.nd.calendar.Control.OnMyDialogClickListener -> com.nd.calendar.Control.n:
    void SetOnSelectDataItem(com.calendar.CommData.CityStruct) -> a
com.nd.calendar.Control.SuggestListAdapter -> com.nd.calendar.Control.o:
    android.view.LayoutInflater mInflater -> bR
    java.util.Vector mSuggestInfos -> cx
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.String replaceWebSymbo(java.lang.String) -> ac
com.nd.calendar.Control.SuggestListAdapter$ViewHolder -> com.nd.calendar.Control.p:
    android.widget.TextView tvSuggest -> cy
    android.widget.TextView tvRespond -> cz
    com.nd.calendar.Control.SuggestListAdapter this$0 -> cA
com.nd.calendar.common.ComDataDef -> com.nd.calendar.common.a:
com.nd.calendar.common.ComDataDef$CalendarData -> com.nd.calendar.common.b:
    int APPID -> cB
    int GET_APPID() -> ba
com.nd.calendar.common.ComDataDef$CoustomData -> com.nd.calendar.common.c:
    java.lang.String[] TWELVE_CLASH -> cC
    java.lang.String[] TOOL_NAME -> cD
com.nd.calendar.common.ConfigHelper -> com.nd.calendar.common.d:
    java.lang.String PREF_NAME -> cE
    com.nd.calendar.common.ConfigHelper mInstance -> cF
    android.content.Context mContext -> mContext
    android.content.SharedPreferences mSettings -> cG
    android.content.SharedPreferences$Editor mEditor -> cH
    com.nd.calendar.common.ConfigHelper getInstance(android.content.Context) -> e
    boolean commit() -> commit
    java.lang.String loadKey(java.lang.String) -> ad
    java.lang.String loadKey$7157d249(java.lang.String) -> ae
    void saveKey(java.lang.String,java.lang.String) -> b
    boolean loadBooleanKey(java.lang.String,boolean) -> a
    void saveBooleanKey(java.lang.String,boolean) -> b
    int loadIntKey(java.lang.String,int) -> a
    void saveIntKey(java.lang.String,int) -> b
    float loadFloatKey$505d0a6f(java.lang.String) -> af
    void saveFloatKey(java.lang.String,float) -> a
com.nd.calendar.communication.http.HttpAppFunClient -> com.nd.calendar.communication.http.a:
    android.content.Context mContext -> mContext
    com.nd.calendar.communication.http.HttpToolKit m_httpToolKit -> cI
    java.lang.String m_sLoginServerDate -> cJ
    boolean DownloadWeahterInfo(java.lang.String,java.lang.StringBuffer) -> a
    boolean DownloadWeatherFromServer(java.lang.String,java.lang.StringBuffer,java.lang.String) -> a
    boolean DownloadGpsInfo$4c469eed(double,double,java.lang.StringBuffer) -> a
    boolean DownSuggestanswer$2189f16e(com.calendar.CommData.SendSuggestInfo) -> a
    boolean Getanswer(org.json.JSONObject,java.lang.StringBuffer) -> a
    java.lang.String keyDecrypt(java.lang.String) -> ag
    java.lang.String getKeyFormServer(java.lang.String) -> ah
    java.lang.String getCommKey() -> bb
com.nd.calendar.communication.http.HttpToolKit -> com.nd.calendar.communication.http.b:
    int SERVER_SUCCESS -> cK
    android.content.Context mContext -> mContext
    int DoGet$92b58d3(java.lang.String,java.lang.StringBuffer) -> b
    int DoPost(java.lang.String,org.json.JSONObject,java.lang.StringBuffer,int) -> a
    int DoPost(java.lang.String,org.json.JSONObject,java.lang.StringBuffer) -> a
    boolean saveToFile(android.content.Context,java.lang.String,java.lang.String) -> a
    boolean needToProxy(android.content.Context) -> f
    org.apache.http.HttpHost getProxyHost(android.content.Context) -> g
    java.net.Proxy getProxy(android.content.Context) -> h
    boolean isNetworkAvailable(android.content.Context) -> i
    java.lang.String getActiveNetWorkName(android.content.Context) -> j
com.nd.calendar.dbrepoist.DBCalendarResult -> com.nd.calendar.dbrepoist.a:
    com.nd.calendar.dbrepoist.IDatabaseRef mDBRef -> cL
    android.content.Context mContext -> mContext
    boolean open(java.lang.String) -> ai
    void close() -> close
    boolean getYiJiChong(com.calendar.CommData.DateInfo,com.calendar.CommData.YjcInfo) -> a
com.nd.calendar.dbrepoist.DbCoustomReslt -> com.nd.calendar.dbrepoist.b:
    com.nd.calendar.dbrepoist.IDatabaseRef m_dataBaseRef -> cM
    void Init(com.nd.calendar.dbrepoist.IDatabaseRef) -> a
com.nd.calendar.dbrepoist.DbSqliteBase -> com.nd.calendar.dbrepoist.c:
    int BUFFER_SIZE -> cN
    android.content.Context m_Context -> cO
    android.database.sqlite.SQLiteDatabase m_SQLiteDatabase -> cP
    com.nd.calendar.dbrepoist.DbSqliteBase$DatabaseHelper m_DatabaseHelper -> cQ
    boolean m_IsOpen -> cR
    int mVer -> cS
    boolean open$78a4d1d4(java.lang.String,int) -> c
    int copyStreamToFile(java.io.InputStream,java.io.File) -> a
    boolean open$3c0dd37f(java.io.InputStream,java.lang.String) -> a
    boolean RunSql(java.lang.String) -> aj
    boolean RunSql(java.lang.String,java.lang.Object[]) -> a
    android.database.Cursor RawQuery(java.lang.String,java.lang.String[]) -> a
    void close() -> close
com.nd.calendar.dbrepoist.DbSqliteBase$DatabaseHelper -> com.nd.calendar.dbrepoist.d:
    com.nd.calendar.dbrepoist.DbSqliteBase this$0 -> cT
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.nd.calendar.dbrepoist.IDatabaseRef -> com.nd.calendar.dbrepoist.e:
    boolean open$78a4d1d4(java.lang.String,int) -> c
    boolean open$3c0dd37f(java.io.InputStream,java.lang.String) -> a
    boolean RunSql(java.lang.String) -> aj
    boolean RunSql(java.lang.String,java.lang.Object[]) -> a
    android.database.Cursor RawQuery(java.lang.String,java.lang.String[]) -> a
    void close() -> close
com.nd.calendar.dbrepoist.IUserInfo -> com.nd.calendar.dbrepoist.f:
    boolean getCityWeatherList(android.content.Context,java.util.ArrayList) -> a
    boolean getCityWeatherJsonById(android.content.Context,java.lang.String,com.calendar.CommData.CityWeatherJson) -> a
    boolean getCityWeatherJsonWidget(android.content.Context,int,com.calendar.CommData.CityWeatherJson) -> a
    boolean updateWeatherInfo(android.content.Context,com.calendar.CommData.CityWeatherJson) -> a
    java.lang.String getLastTimeByType(android.content.Context,java.lang.String,int) -> a
    java.lang.String getCityCodeByID(android.content.Context,int) -> a
    java.lang.String getCityNameByID(android.content.Context,int) -> b
    int GetCityList(android.content.Context,java.util.List) -> a
    int GetCityCount(android.content.Context) -> k
    int InsertCityInfo(android.content.Context,com.calendar.CommData.CityInfo,boolean) -> a
    boolean DeleteCityInfo(android.content.Context,com.calendar.CommData.CityInfo) -> a
    boolean setLocationCity(android.content.Context,com.calendar.CommData.CityInfo) -> b
    com.calendar.CommData.CityInfo getLocationCity$cb43f66(android.content.Context) -> l
    boolean updateWeatherAuto(android.content.Context,com.calendar.CommData.CityWeatherJson) -> b
    com.nd.calendar.dbrepoist.IUser_SuggestInfo GetUserSuggestIf() -> bc
com.nd.calendar.dbrepoist.IUser_SuggestInfo -> com.nd.calendar.dbrepoist.g:
    void InitDb(com.nd.calendar.dbrepoist.IDatabaseRef) -> b
    boolean InsertSuggestInfo(com.calendar.CommData.SendSuggestInfo) -> b
    boolean GetIsHasNoAnser(java.util.List) -> c
    boolean UpdateItemSuggestInfo(com.calendar.CommData.SendSuggestInfo) -> c
    boolean GetAllsuggestInfo(java.util.List) -> d
com.nd.calendar.dbrepoist.IWeatherReslt -> com.nd.calendar.dbrepoist.h:
    void Init(com.nd.calendar.dbrepoist.IDatabaseRef) -> a
    int GetCityListByMsg(java.lang.String,java.util.List) -> a
    int GetAllProvWithSort$4ca1af14(java.util.List) -> e
    int GetAllAreaByProvcode(java.lang.String,java.util.List) -> b
    int GetAllCityByAreacode(java.lang.String,java.util.List) -> c
    java.lang.String GetProvNameByCityCode(java.lang.String) -> ak
    boolean GetScenicByProvName(java.lang.String,java.util.List) -> d
    int GetScenicsBySearch(java.lang.String,java.util.List) -> e
    int GetForeignCountryWithSort$4ca1af14(java.util.List) -> f
    int GetForeignCityByAreaCode(java.lang.String,java.util.List) -> f
    java.lang.String GetCountryNameByCityCode(java.lang.String) -> al
    int GetForeignCityBySearch(java.lang.String,java.util.List) -> g
com.nd.calendar.dbrepoist.UserInfo -> com.nd.calendar.dbrepoist.i:
    com.nd.calendar.dbrepoist.IDatabaseRef m_dataBaseRef -> cM
    com.nd.calendar.dbrepoist.IUser_SuggestInfo m_User_SuggerstInfoIf -> cU
    com.nd.calendar.dbrepoist.UserInfo _instance -> cV
    com.nd.calendar.dbrepoist.IUserInfo getInstance(android.content.Context,com.nd.calendar.dbrepoist.IDatabaseRef) -> a
    int GetCityList(android.content.Context,java.util.List) -> a
    int GetCityCount(android.content.Context) -> k
    int getCityListID(android.content.Context,com.calendar.CommData.CityInfo) -> c
    int InsertCityInfo(android.content.Context,com.calendar.CommData.CityInfo,boolean) -> a
    boolean UpdateCityInfo(android.content.Context,com.calendar.CommData.CityInfo) -> d
    boolean DeleteCityInfo(android.content.Context,com.calendar.CommData.CityInfo) -> a
    boolean getCityWeatherJsonById(android.content.Context,java.lang.String,com.calendar.CommData.CityWeatherJson) -> a
    boolean getCityWeatherList(android.content.Context,java.util.ArrayList) -> a
    boolean getCityWeatherList(android.content.Context,android.net.Uri,java.util.ArrayList) -> a
    boolean updateWeatherInfo(android.content.Context,com.calendar.CommData.CityWeatherJson) -> a
    java.lang.String getLastTimeByType(android.content.Context,java.lang.String,int) -> a
    boolean updateWeatherAuto(android.content.Context,com.calendar.CommData.CityWeatherJson) -> b
    boolean getCityWeatherJsonWidget(android.content.Context,int,com.calendar.CommData.CityWeatherJson) -> a
    java.lang.String getCityCodeByID(android.content.Context,int) -> a
    java.lang.String getCityNameByID(android.content.Context,int) -> b
    boolean readCityDataFormCalendar(android.content.Context) -> m
    int insertCityData(android.content.Context,com.calendar.CommData.CityWeatherJson) -> c
    boolean setLocationCity(android.content.Context,com.calendar.CommData.CityInfo) -> b
    com.calendar.CommData.CityInfo getLocationCity$cb43f66(android.content.Context) -> l
    com.nd.calendar.dbrepoist.IUser_SuggestInfo GetUserSuggestIf() -> bc
com.nd.calendar.dbrepoist.User_SuggestInfo -> com.nd.calendar.dbrepoist.j:
    com.nd.calendar.dbrepoist.IDatabaseRef m_dataBaseRef -> cM
    void InitDb(com.nd.calendar.dbrepoist.IDatabaseRef) -> b
    boolean InsertSuggestInfo(com.calendar.CommData.SendSuggestInfo) -> b
    boolean GetIsHasNoAnser(java.util.List) -> c
    boolean GetAllsuggestInfo(java.util.List) -> d
    boolean UpdateItemSuggestInfo(com.calendar.CommData.SendSuggestInfo) -> c
com.nd.calendar.dbrepoist.WeatherReslt -> com.nd.calendar.dbrepoist.k:
    com.nd.calendar.dbrepoist.IDatabaseRef m_dataBaseRef -> cM
    void Init(com.nd.calendar.dbrepoist.IDatabaseRef) -> a
    int GetCityListByMsg(java.lang.String,java.util.List) -> a
    int GetAllAreaByProvcode(java.lang.String,java.util.List) -> b
    int GetAllProvWithSort$4ca1af14(java.util.List) -> e
    int GetAllCityByAreacode(java.lang.String,java.util.List) -> c
    java.lang.String GetProvNameByCityCode(java.lang.String) -> ak
    boolean GetScenicByProvName(java.lang.String,java.util.List) -> d
    int GetScenicsBySearch(java.lang.String,java.util.List) -> e
    int GetForeignCountryWithSort$4ca1af14(java.util.List) -> f
    int GetForeignCityByAreaCode(java.lang.String,java.util.List) -> f
    java.lang.String GetCountryNameByCityCode(java.lang.String) -> al
    int GetForeignCityBySearch(java.lang.String,java.util.List) -> g
com.nd.calendar.module.CalendarModule -> com.nd.calendar.module.a:
    android.content.Context mContext -> mContext
    com.nd.calendar.dbrepoist.DBCalendarResult mCalendarResult -> cW
    int mCalendarYear -> cX
    com.nd.calendar.module.CalendarModule$DownloadThread mDownloadThread -> cY
    int mLastState -> cZ
    com.calendar.CommData.DateInfo mLastDateInfo -> da
    com.calendar.CommData.YjcInfo mLastYjcInfo -> db
    int getYJCInfo(com.calendar.CommData.DateInfo,com.calendar.CommData.YjcInfo) -> b
    android.content.Context access$0(com.nd.calendar.module.CalendarModule) -> a
    void access$1(com.nd.calendar.module.CalendarModule,int) -> a
com.nd.calendar.module.CalendarModule$DownloadThread -> com.nd.calendar.module.b:
    java.lang.String mFileName -> dc
    java.lang.String mTargetDir -> dd
    com.nd.calendar.module.CalendarModule this$0 -> de
    void run() -> run
    boolean UnZipFile(java.lang.String,java.lang.String) -> c
com.nd.calendar.module.CoustoModule -> com.nd.calendar.module.c:
    com.nd.calendar.dbrepoist.DbCoustomReslt m_dbCouReslt -> df
    com.nd.calendar.dbrepoist.IWeatherReslt m_dbWeahterReslt -> dg
    void Init(com.nd.calendar.dbrepoist.IDatabaseRef) -> a
    int GetCityListByMsg(java.lang.String,java.util.List) -> a
    int GetAllAreaByprovcode(java.lang.String,java.util.List) -> h
    int GetAllProvWithSort$4ca1af14(java.util.List) -> e
    int GetAllCityByareacode(java.lang.String,java.util.List) -> i
    java.lang.String GetProvNameByCityCode(java.lang.String) -> ak
    boolean GetScenicByProvName(java.lang.String,java.util.List) -> d
    int GetScenicsBySearch(java.lang.String,java.util.List) -> e
    int GetForeignCountryWithSort$19bb31ca(java.util.List,java.util.List,java.util.List) -> a
    int GetForeignCityByAreaCode(java.lang.String,java.util.List) -> f
    java.lang.String GetCountryNameByCityCode(java.lang.String) -> al
    int GetForeignCityBySearch(java.lang.String,java.util.List) -> g
com.nd.calendar.module.GpsSeverModule -> com.nd.calendar.module.d:
    android.content.Context mContext -> mContext
    android.location.LocationManager m_gpsMgr -> dh
    com.nd.calendar.communication.http.HttpAppFunClient m_AppFunClient -> di
    boolean GetGpsInfoFromServer(double,double,com.calendar.CommData.CityStruct) -> a
    boolean GetGpsOpenState() -> bd
    void SetGpsOpenState$1385ff() -> be
com.nd.calendar.module.HttpModle -> com.nd.calendar.module.e:
    android.content.Context mContext -> mContext
    com.nd.calendar.communication.http.HttpAppFunClient m_AppFunClient -> di
    java.lang.String m_sVerCode -> dj
    java.lang.String m_sDownUrl -> dk
    int m_iServerVer -> dl
    com.nd.calendar.dbrepoist.IUserInfo m_dbUserInfo -> dm
    boolean DownSuggestanswer$6ef37c46(int,java.lang.String) -> a
    boolean GetListAnswer(int) -> i
com.nd.calendar.module.ICoustoModule -> com.nd.calendar.module.f:
    void Init(com.nd.calendar.dbrepoist.IDatabaseRef) -> a
    int GetCityListByMsg(java.lang.String,java.util.List) -> a
    int GetAllProvWithSort$4ca1af14(java.util.List) -> e
    int GetAllAreaByprovcode(java.lang.String,java.util.List) -> h
    int GetAllCityByareacode(java.lang.String,java.util.List) -> i
    java.lang.String GetProvNameByCityCode(java.lang.String) -> ak
    boolean GetScenicByProvName(java.lang.String,java.util.List) -> d
    int GetScenicsBySearch(java.lang.String,java.util.List) -> e
    int GetForeignCountryWithSort$19bb31ca(java.util.List,java.util.List,java.util.List) -> a
    int GetForeignCityByAreaCode(java.lang.String,java.util.List) -> f
    java.lang.String GetCountryNameByCityCode(java.lang.String) -> al
    int GetForeignCityBySearch(java.lang.String,java.util.List) -> g
com.nd.calendar.module.IGpsSeverModule -> com.nd.calendar.module.g:
    boolean GetGpsOpenState() -> bd
    void SetGpsOpenState$1385ff() -> be
    boolean GetGpsInfoFromServer(double,double,com.calendar.CommData.CityStruct) -> a
com.nd.calendar.module.IHttpModle -> com.nd.calendar.module.h:
    boolean DownSuggestanswer$6ef37c46(int,java.lang.String) -> a
    boolean GetListAnswer(int) -> i
com.nd.calendar.module.IUserModule -> com.nd.calendar.module.i:
    int GetCityList(java.util.List) -> g
    int SetCityInfo(com.calendar.CommData.CityInfo,boolean) -> a
    boolean DeleteCityInfo(com.calendar.CommData.CityInfo) -> a
    boolean setLocationCity(android.content.Context,com.calendar.CommData.CityInfo) -> b
    com.calendar.CommData.CityInfo getLocationCity$cb43f66(android.content.Context) -> l
    boolean GetAllsuggestInfo(java.util.List) -> d
com.nd.calendar.module.UserModule -> com.nd.calendar.module.j:
    com.nd.calendar.dbrepoist.IUserInfo m_dbUserInfo -> dm
    android.content.Context mContext -> mContext
    int GetCityList(java.util.List) -> g
    int SetCityInfo(com.calendar.CommData.CityInfo,boolean) -> a
    boolean DeleteCityInfo(com.calendar.CommData.CityInfo) -> a
    boolean setLocationCity(android.content.Context,com.calendar.CommData.CityInfo) -> b
    com.calendar.CommData.CityInfo getLocationCity$cb43f66(android.content.Context) -> l
    boolean GetAllsuggestInfo(java.util.List) -> d
com.nd.calendar.module.WarningMoudle -> com.nd.calendar.module.k:
    java.util.HashMap downloadingIco -> dn
    com.nd.calendar.module.WarningMoudle warningMoudle -> do
    android.content.Context mContext -> mContext
    com.nd.calendar.module.WarningMoudle getInstance(android.content.Context) -> n
    boolean downloadWarningIco$72ccb83f(com.calendar.CommData.WarningInfo,android.os.Handler) -> a
    void sendFinishMsg(java.lang.String,android.os.Message) -> a
    android.content.Context access$0(com.nd.calendar.module.WarningMoudle) -> a
com.nd.calendar.module.WarningMoudle$DownloadIcoThread -> com.nd.calendar.module.l:
    com.calendar.CommData.WarningInfo warningInfo -> dp
    com.nd.calendar.module.WarningMoudle this$0 -> dq
    void run() -> run
com.nd.calendar.module.WeatherModule -> com.nd.calendar.module.m:
    java.lang.String TAG -> TAG
    java.util.Date SUN_BEGIN -> dr
    java.util.Date SUN_END -> ds
    java.lang.String[] WEATHER_ICO_KEY -> dt
    int WEATHER_UNKNOWN_RES_64 -> du
    int[] WEATHER_ICO_RES_64 -> dv
    java.lang.String[][] WEATHER_ICO_RES -> dw
    java.lang.String[][] WEATHER_NEW_ICO_RES -> dx
    java.lang.String[][] WEATHER_ICO_STRING -> dy
    int[][] WEATHER_COLORS -> dz
    com.nd.calendar.communication.http.HttpAppFunClient m_AppFunClient -> di
    com.nd.calendar.dbrepoist.IUserInfo m_dbUserInfo -> dm
    android.content.Context mContext -> mContext
    boolean isSuccess(int) -> j
    int GetWeatherInfo$2fa95d9c(com.calendar.CommData.CityWeatherInfo) -> c
    int GetWeatherInfo(java.lang.String,int,boolean,com.calendar.CommData.CityWeatherInfo) -> a
    boolean getCityWeatherList(java.util.List) -> h
    int getCityCount() -> bf
    boolean getCityWeatherById(int,com.calendar.CommData.CityWeatherInfo) -> a
    boolean getCityWeatherWidget(int,com.calendar.CommData.CityWeatherInfo) -> b
    int GetWarningInfo(com.calendar.CommData.CityWeatherInfo,boolean) -> a
    boolean isToRefreshWeather(int,java.util.Date,int) -> a
    boolean checkRefresh(int,java.util.Date,int) -> b
    boolean isNeedReadCache$615ffe71(int,java.lang.String) -> b
    int getWeatherData(java.lang.String,int,int,boolean,java.lang.StringBuffer) -> a
    boolean isCheckCodeError(java.lang.String) -> am
    boolean IsInDateTime() -> bg
    boolean isNightTime(com.calendar.CommData.SunInfo) -> a
    int getWeatherIcoIndex(java.lang.String) -> an
    java.lang.String GetFinalWeathResString(java.lang.String,boolean) -> c
    java.lang.String GetFinalWeathResId(java.lang.String,boolean,boolean) -> a
    int GetFinalWeath64ResId(java.lang.String) -> ao
    int GetFinalWeathColor(java.lang.String,boolean) -> d
    android.graphics.drawable.Drawable getWipDrawable(android.content.Context,java.lang.String,boolean) -> a
    java.io.InputStream getWipInputStream(android.content.Context,java.lang.String,int,boolean) -> a
    java.lang.String getCityCodeByID(int) -> k
    java.lang.String getCityNameByID(int) -> l
com.nd.calendar.module.gps.LocManager -> com.nd.calendar.module.gps.a:
    android.telephony.TelephonyManager mTelephonyManager -> dA
    android.location.LocationManager mLocationManager -> dB
    android.content.Context mContext -> mContext
    java.lang.String mlanguage -> dC
    com.nd.calendar.module.gps.LocManager$Result getLocationPoint() -> bh
    com.nd.calendar.module.gps.LocManager$Result getLastKnown(java.lang.String) -> ap
    boolean isValidResult(com.nd.calendar.module.gps.LocManager$Result) -> a
    android.telephony.cdma.CdmaCellLocation getCdmaCellLocation() -> bi
    com.nd.calendar.module.gps.LocManager$Result getLocationByCellidWithGoogleApi() -> bj
    com.nd.calendar.module.gps.LocManager$HttpResult doPost(org.json.JSONObject,java.lang.String) -> c
com.nd.calendar.module.gps.LocManager$HttpResult -> com.nd.calendar.module.gps.b:
    int ret -> dD
    java.lang.String response -> response
    com.nd.calendar.module.gps.LocManager this$0 -> dE
com.nd.calendar.module.gps.LocManager$Result -> com.nd.calendar.module.gps.c:
    double latitude -> dF
    double longitude -> dG
com.nd.calendar.module.gps.MyLocation -> com.nd.calendar.module.gps.d:
    java.util.Timer timer1 -> dH
    android.location.LocationManager lm -> dI
    com.nd.calendar.module.gps.MyLocation$LocationGpsResult locationResult -> dJ
    boolean gps_enabled -> dK
    boolean network_enabled -> dL
    android.location.LocationListener locationListenerGps -> dM
    android.location.LocationListener locationListenerNetwork -> dN
    boolean getLocation(android.content.Context,com.nd.calendar.module.gps.MyLocation$LocationResult) -> a
    java.util.Timer access$0(com.nd.calendar.module.gps.MyLocation) -> a
    com.nd.calendar.module.gps.MyLocation$LocationGpsResult access$1(com.nd.calendar.module.gps.MyLocation) -> b
    android.location.LocationManager access$2(com.nd.calendar.module.gps.MyLocation) -> c
    boolean access$3(com.nd.calendar.module.gps.MyLocation) -> d
    boolean access$4(com.nd.calendar.module.gps.MyLocation) -> e
    void access$5(com.nd.calendar.module.gps.MyLocation,android.content.Context,com.nd.calendar.module.gps.MyLocation$LocationResult) -> a
com.nd.calendar.module.gps.MyLocation$1 -> com.nd.calendar.module.gps.e:
    com.nd.calendar.module.gps.MyLocation this$0 -> dO
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
com.nd.calendar.module.gps.MyLocation$2 -> com.nd.calendar.module.gps.f:
    com.nd.calendar.module.gps.MyLocation this$0 -> dO
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
com.nd.calendar.module.gps.MyLocation$3 -> com.nd.calendar.module.gps.g:
    com.nd.calendar.module.gps.MyLocation this$0 -> dO
    com.nd.calendar.module.gps.MyLocation$LocationResult val$result -> dP
    void gotLocation(android.location.Location) -> a
com.nd.calendar.module.gps.MyLocation$4 -> com.nd.calendar.module.gps.h:
    com.nd.calendar.module.gps.MyLocation this$0 -> dO
    android.content.Context val$context -> dQ
    com.nd.calendar.module.gps.MyLocation$LocationResult val$result -> dP
    void run() -> run
com.nd.calendar.module.gps.MyLocation$5 -> com.nd.calendar.module.gps.i:
    com.nd.calendar.module.gps.MyLocation this$0 -> dO
    android.content.Context val$context -> dQ
    com.nd.calendar.module.gps.MyLocation$LocationResult val$result -> dP
    boolean handleMessage(android.os.Message) -> handleMessage
com.nd.calendar.module.gps.MyLocation$6 -> com.nd.calendar.module.gps.j:
    com.nd.calendar.module.gps.MyLocation this$0 -> dO
    android.content.Context val$context -> dQ
    com.nd.calendar.module.gps.MyLocation$LocationResult val$result -> dP
    android.os.Handler val$h -> dR
    void run() -> run
com.nd.calendar.module.gps.MyLocation$GetLastLocation -> com.nd.calendar.module.gps.k:
    com.nd.calendar.module.gps.MyLocation this$0 -> dO
    void run() -> run
com.nd.calendar.module.gps.MyLocation$LocationGpsResult -> com.nd.calendar.module.gps.l:
    void gotLocation(android.location.Location) -> a
com.nd.calendar.module.gps.MyLocation$LocationResult -> com.nd.calendar.module.gps.m:
    void gotLocation(com.nd.calendar.module.gps.LocManager$Result) -> b
com.nd.calendar.provider.CalendarDatas -> com.nd.calendar.provider.a:
    java.lang.String AUTHORITY_PANDAHOME -> dS
    boolean PROVIDER_AUTHED -> dT
    void setAuthority(android.content.Context) -> o
com.nd.calendar.provider.CalendarDatas$CityDataColumns -> com.nd.calendar.provider.b:
    android.net.Uri CONTENT_URI_CALENDAR -> dU
    android.net.Uri CONTENT_URI_PANDAHOME -> dV
    android.net.Uri CONTENT_URI -> CONTENT_URI
    boolean SWITCH_TO_CALENDAR_READ_URI -> dW
    boolean SWITCH_TO_CALENDAR_MGR_URI -> dX
    android.net.Uri getURI() -> bk
    android.net.Uri GET_READ_ONLY_URI() -> bl
    android.net.Uri GET_MGR_URI() -> bm
com.nd.calendar.provider.PandahomeProvider -> com.nd.calendar.provider.PandahomeProvider:
    android.content.UriMatcher sUriMatcher -> dY
    com.nd.calendar.provider.PandahomeProvider$DatabaseHelper mOpenHelper -> dZ
    boolean createlistweathInfo(android.database.sqlite.SQLiteDatabase) -> a
    int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    java.lang.String getType(android.net.Uri) -> getType
    android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    boolean onCreate() -> onCreate
    android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    boolean access$0(android.database.sqlite.SQLiteDatabase) -> b
com.nd.calendar.provider.PandahomeProvider$DatabaseHelper -> com.nd.calendar.provider.c:
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    void onOpen(android.database.sqlite.SQLiteDatabase) -> onOpen
com.nd.calendar.util.CalendarInfo -> com.nd.calendar.util.a:
    int[] solarMonth -> ea
    java.lang.String[] WEEK_NAME -> eb
    java.lang.String[] TIAN_GAN -> ec
    java.lang.String[] sdizhi -> ed
    java.lang.String[] cDayName -> ee
    java.lang.String[] cMonName -> ef
    long[] lunarInfo -> eg
    int[] NlYearDaysList -> eh
    java.lang.String[][] m_JqTimeArray -> ei
    java.lang.String[] g_JieQi -> ej
    java.text.SimpleDateFormat JIE_QI_FM -> ek
    java.lang.String DayOfWeek(com.calendar.CommData.DateInfo) -> a
    int LYearDays(int) -> m
    int leapDays(int) -> n
    int leapMonth(int) -> o
    int monthDays(int,int) -> b
    java.lang.String getLunarEx(com.calendar.CommData.DateInfo) -> b
    boolean GetJieQiInAYear(int,int,com.calendar.CommData.DateInfo) -> a
    java.lang.String GetAfterJieQi(com.calendar.CommData.DateInfo) -> c
    com.calendar.CommData.DateInfo GetSysDateInfo() -> bn
    com.calendar.CommData.DateInfo getSysDateInfo(java.lang.String) -> aq
    java.lang.String getDate(java.lang.String) -> ar
    java.lang.String getWeekOfDate(java.util.Date) -> b
com.nd.calendar.util.ComfunHelp -> com.nd.calendar.util.b:
    java.text.SimpleDateFormat SDF_DATE -> el
    java.text.SimpleDateFormat SDF_TIME -> em
    java.text.SimpleDateFormat SDF_TIMESS -> en
    int SERVER_TIME_ZOME -> eo
    java.util.Date GetDate$310d07ec(java.lang.String,java.lang.String) -> d
    java.util.Date getTimeDate(java.lang.String) -> as
    java.lang.String formatDateTime(java.util.Date) -> c
    java.lang.String formatDate(java.util.Date) -> formatDate
    java.lang.String getSystemTime() -> bo
    com.calendar.CommData.DateInfo SetDateDeiff$1948a2c8(com.calendar.CommData.DateInfo) -> d
    int dip2px(android.content.Context,float) -> a
    int dip2px(float) -> a
    java.lang.String md5(java.lang.String) -> at
    boolean checkActivity(android.content.Context,android.content.Intent) -> a
    boolean checkApkExist(android.content.Context,java.lang.String,int) -> b
    int getAppVersion(android.content.Context,java.lang.String) -> a
    int getTimeZomeRawOffset(java.lang.String) -> au
    boolean isLocalTimeZome(java.lang.String) -> av
    java.util.Date getLocalServerDate(java.util.Date) -> d
    java.util.Date getLocalCityDate(java.lang.String) -> aw
    java.util.Date getCityServerDate(java.util.Date,java.lang.String) -> a
    int getResIdByName(android.content.Context,java.lang.String) -> b
com.nd.calendar.util.FileHelp -> com.nd.calendar.util.c:
    java.lang.String GetPhoneDatabase(android.content.Context,java.lang.String) -> c
    java.lang.String getSDPath() -> bp
    java.lang.String getCalendarDir2(java.lang.String) -> ax
    java.lang.String getCalendarSkinDir() -> bq
    boolean DeleteFile(java.io.File) -> d
com.nd.calendar.util.StringHelp -> com.nd.calendar.util.d:
    org.json.JSONObject getJSONObject(java.lang.String) -> getJSONObject
    java.lang.String getUrlFileName(java.lang.String) -> ay
com.nd.calendar.util.SysHelpFun -> com.nd.calendar.util.e:
    java.lang.String VERSION_NAME -> ep
    java.lang.String getDeviceId(android.content.Context) -> p
    java.lang.String getAppVersionName(android.content.Context) -> q
com.nd.weather.widget.BootReceiver -> com.nd.weather.widget.BootReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.nd.weather.widget.CommData.SearchInfo -> com.nd.weather.widget.CommData.a:
    java.lang.String text -> eq
    java.lang.String note -> er
    boolean recent -> es
    java.lang.Object tag -> et
    java.lang.String getText() -> getText
    java.lang.String getNote() -> br
    boolean isRecent() -> bs
    void setText(java.lang.String) -> setText
    void setNote(java.lang.String) -> az
    void setRecent$1385ff() -> bt
    java.lang.Object getTag() -> getTag
    void setTag(java.lang.Object) -> setTag
com.nd.weather.widget.Ctrl.DragListView -> com.nd.weather.widget.Ctrl.DragListView:
    int scaledTouchSlop -> eu
    android.widget.ImageView dragImageView -> ev
    int dragSrcPosition -> ew
    int dragPosition -> ex
    int dragPoint -> ey
    int dragOffset -> ez
    android.view.WindowManager windowManager -> eA
    android.view.WindowManager$LayoutParams windowParams -> eB
    int upScrollBounce -> eC
    int downScrollBounce -> eD
    boolean bEnableDrag -> eE
    com.nd.calendar.Control.DragListViewListener dragListViewListener -> eF
    void setbEnableDrag(boolean) -> f
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void stopDrag() -> bu
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setDragListViewListener(com.nd.calendar.Control.DragListViewListener) -> a
com.nd.weather.widget.Ctrl.SinglePopupWindow -> com.nd.weather.widget.Ctrl.a:
    android.view.View mContentView -> eG
    android.content.Context mContext -> mContext
    thirdParty.WheelView.WheelView mWheel -> eH
    void setArrayData(java.lang.Object[]) -> a
    void setCurrentItem(int) -> p
    int getCurrentItem() -> bv
    void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
com.nd.weather.widget.Ctrl.TimePopupWindow -> com.nd.weather.widget.Ctrl.b:
    android.view.View mContentView -> eG
    android.content.Context mContext -> mContext
    thirdParty.WheelView.WheelView mWheelStartHours -> eI
    thirdParty.WheelView.WheelView mWheelStartMins -> eJ
    thirdParty.WheelView.WheelView mWheelEndHours -> eK
    thirdParty.WheelView.WheelView mWheelEndMins -> eL
    int mStartHour -> eM
    int mStartMins -> eN
    int mEndHour -> eO
    int mEndMins -> eP
    android.view.View$OnClickListener mOnClickListener -> eQ
    android.view.View$OnClickListener clickListener -> eR
    thirdParty.WheelView.OnWheelScrollListener scrollListener -> eS
    void setStartTime(int,int) -> c
    void setEndTime(int,int) -> d
    int getStartHour() -> bw
    int getStartMins() -> bx
    int getEndHour() -> by
    int getEndMins() -> bz
    void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
    void initHour(thirdParty.WheelView.WheelView) -> a
    void initMin(thirdParty.WheelView.WheelView) -> b
    thirdParty.WheelView.NumericWheelAdapter initWheel$4ffc0ae(thirdParty.WheelView.WheelView,int,boolean) -> a
    thirdParty.WheelView.WheelView access$0(com.nd.weather.widget.Ctrl.TimePopupWindow) -> a
    void access$1(com.nd.weather.widget.Ctrl.TimePopupWindow,int) -> a
    thirdParty.WheelView.WheelView access$2(com.nd.weather.widget.Ctrl.TimePopupWindow) -> b
    void access$3(com.nd.weather.widget.Ctrl.TimePopupWindow,int) -> b
    thirdParty.WheelView.WheelView access$4(com.nd.weather.widget.Ctrl.TimePopupWindow) -> c
    void access$5(com.nd.weather.widget.Ctrl.TimePopupWindow,int) -> c
    thirdParty.WheelView.WheelView access$6(com.nd.weather.widget.Ctrl.TimePopupWindow) -> d
    void access$7(com.nd.weather.widget.Ctrl.TimePopupWindow,int) -> d
    android.view.View$OnClickListener access$8(com.nd.weather.widget.Ctrl.TimePopupWindow) -> e
com.nd.weather.widget.Ctrl.TimePopupWindow$1 -> com.nd.weather.widget.Ctrl.c:
    com.nd.weather.widget.Ctrl.TimePopupWindow this$0 -> eT
    void onClick(android.view.View) -> onClick
com.nd.weather.widget.Ctrl.TimePopupWindow$2 -> com.nd.weather.widget.Ctrl.d:
    com.nd.weather.widget.Ctrl.TimePopupWindow this$0 -> eT
    void onScrollingFinished(thirdParty.WheelView.WheelView) -> c
com.nd.weather.widget.PandaHome.CalendarWeatherChoose -> com.nd.weather.widget.PandaHome.CalendarWeatherChoose:
    void onCreate(android.os.Bundle) -> onCreate
com.nd.weather.widget.PandaHome.CalendarWeatherWidgetView_4x1 -> com.nd.weather.widget.PandaHome.CalendarWeatherWidgetView_4x1:
    java.lang.String TAG -> TAG
    com.nd.weather.widget.WidgetTask mWidgetTask -> eU
    com.nd.weather.widget.skin.WidgetLoadedSkinInfo mSkinInfo -> eV
    void setHomePackage(java.lang.String) -> setHomePackage
    void onDestory(int) -> onDestory
    void onLoad(int) -> onLoad
    com.nd.weather.widget.skin.WidgetLoadedSkinInfo getWidgetSkinInfo() -> bA
    void setWidgetBuilder(com.nd.weather.widget.WidgetTask) -> a
    com.nd.weather.widget.WidgetTask getWidgetBuilder() -> bB
    int getWidgetLoadingBackround() -> bC
com.nd.weather.widget.PandaHome.CalendarWeatherWidgetView_4x2 -> com.nd.weather.widget.PandaHome.CalendarWeatherWidgetView_4x2:
    com.nd.weather.widget.WidgetTask mWidgetTask -> eU
    com.nd.weather.widget.skin.WidgetLoadedSkinInfo mSkinInfo -> eV
    void setHomePackage(java.lang.String) -> setHomePackage
    void onDestory(int) -> onDestory
    void onLoad(int) -> onLoad
    com.nd.weather.widget.skin.WidgetLoadedSkinInfo getWidgetSkinInfo() -> bA
    void setWidgetBuilder(com.nd.weather.widget.WidgetTask) -> a
    com.nd.weather.widget.WidgetTask getWidgetBuilder() -> bB
    int getWidgetLoadingBackround() -> bC
com.nd.weather.widget.PandaHome.PandaThemeManager -> com.nd.weather.widget.PandaHome.a:
    java.lang.String getSkinPathFromId(android.content.Context,java.lang.String) -> d
    java.lang.String getSkinDir(java.lang.String) -> aA
com.nd.weather.widget.PandaHome.PandaWidgetView -> com.nd.weather.widget.PandaHome.PandaWidgetView:
    java.lang.String TAG -> TAG
    java.lang.String[] WIDGET_NAME -> eW
    android.content.Context mContext -> mContext
    int mWidgetId -> eX
    boolean mAttached -> eY
    int mWidgetType -> eZ
    android.view.View mCalendarView -> fa
    boolean mbCalendarRemove -> fb
    java.lang.ref.SoftReference bitmapCache -> fc
    int mSkinWidth -> fd
    int mSkinHeight -> fe
    float mSkinInc -> ff
    float mWidgetInc -> fg
    int mSkinPaddingLeft -> fh
    int mSkinPaddingTop -> fi
    float mX -> fj
    float mY -> fk
    int mSkinRealHeight -> fl
    int mSkinRealWidth -> fm
    float mSkinHeightScale -> fn
    float mSkinWidthScale -> fo
    android.database.ContentObserver mContentObserver -> fp
    android.os.Handler mHandler -> mHandler
    com.nd.weather.widget.WidgetTask$WidgetUpdateInterface mWidgetUpdateInf -> fq
    android.content.BroadcastReceiver mIntentReceiver -> fr
    android.content.BroadcastReceiver mSDReceiver -> fs
    android.content.BroadcastReceiver mWeatherUpdaterReceiver -> ft
    void onLoad(int) -> onLoad
    com.nd.weather.widget.skin.WidgetLoadedSkinInfo getWidgetSkinInfo() -> bA
    void setWidgetBuilder(com.nd.weather.widget.WidgetTask) -> a
    com.nd.weather.widget.WidgetTask getWidgetBuilder() -> bB
    int getWidgetLoadingBackround() -> bC
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onDestory(int) -> onDestory
    void callOnLoad() -> bD
    void onLoad(int,java.lang.String,int) -> onLoad
    void regReceiver(boolean,boolean) -> a
    void unRegReceiver() -> bE
    boolean updateWidgets(android.content.Context,int) -> updateWidgets
    void updateAppWidget(android.content.Context,int) -> c
    com.nd.weather.widget.skin.WidgetLoadedSkinInfo loadWidgetSkin(android.content.Context,int,boolean) -> a
    void optReceiverUpdate(android.content.Context,android.content.Intent,int) -> a
    void setImageViewBitmap(int,android.graphics.Bitmap) -> setImageViewBitmap
    void setImageViewResource(int,int) -> setImageViewResource
    void setTextView(int,java.lang.String) -> setTextView
    void requreWidgetReload(android.content.Context,boolean) -> requreWidgetReload
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void culateInc() -> bF
    boolean performClick() -> performClick
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void freeClick(int,int) -> e
    java.lang.String access$0() -> bG
com.nd.weather.widget.PandaHome.PandaWidgetView$1 -> com.nd.weather.widget.PandaHome.b:
    com.nd.weather.widget.PandaHome.PandaWidgetView this$0 -> fu
    void handleMessage(android.os.Message) -> handleMessage
com.nd.weather.widget.PandaHome.PandaWidgetView$2 -> com.nd.weather.widget.PandaHome.c:
    com.nd.weather.widget.PandaHome.PandaWidgetView this$0 -> fu
    boolean setWidgetSkin(android.graphics.Bitmap) -> a
    com.nd.weather.widget.skin.WidgetLoadedSkinInfo loadSkin(boolean) -> g
com.nd.weather.widget.PandaHome.PandaWidgetView$3 -> com.nd.weather.widget.PandaHome.d:
    boolean mScreenOff -> fv
    com.nd.weather.widget.PandaHome.PandaWidgetView this$0 -> fu
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.nd.weather.widget.PandaHome.PandaWidgetView$4 -> com.nd.weather.widget.PandaHome.e:
    com.nd.weather.widget.PandaHome.PandaWidgetView this$0 -> fu
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.nd.weather.widget.PandaHome.PandaWidgetView$5 -> com.nd.weather.widget.PandaHome.f:
    com.nd.weather.widget.PandaHome.PandaWidgetView this$0 -> fu
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.nd.weather.widget.PandaHome.PandaWidgetView$WeatherContentObserver -> com.nd.weather.widget.PandaHome.g:
    com.nd.weather.widget.PandaHome.PandaWidgetView this$0 -> fu
    void onChange(boolean) -> onChange
com.nd.weather.widget.PandaHome.Receiver.InstallReceiver -> com.nd.weather.widget.PandaHome.Receiver.InstallReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.nd.weather.widget.PandaHome.Receiver.PandaHomeThemeChangeReceiver -> com.nd.weather.widget.PandaHome.Receiver.PandaHomeThemeChangeReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.nd.weather.widget.PandaHome.Receiver.PandaHomeThemeChangeReceiver$1 -> com.nd.weather.widget.PandaHome.Receiver.a:
    com.nd.weather.widget.PandaHome.Receiver.PandaHomeThemeChangeReceiver this$0 -> fw
    android.content.Context val$context -> dQ
    java.lang.String val$themeId -> fx
    void run() -> run
com.nd.weather.widget.PandaHome.WidgetHotAreaEvent -> com.nd.weather.widget.PandaHome.h:
    java.lang.String[] clockPkgName -> fy
    java.lang.String[] clockClassName -> fz
    java.lang.String[] calendarPkgName -> fA
    java.lang.String[] calendarClassName -> fB
    void startAlarmClock(android.content.Context) -> r
    void startCalendar(android.content.Context) -> s
com.nd.weather.widget.ReflectUtils -> com.nd.weather.widget.a:
    java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Class[],java.lang.Object[]) -> a
com.nd.weather.widget.StartupReceiver -> com.nd.weather.widget.StartupReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.nd.weather.widget.TimeService -> com.nd.weather.widget.TimeService:
    com.nd.calendar.module.IGpsSeverModule m_gpsSeverMdl -> fC
    com.nd.calendar.module.WeatherModule weatherModle -> co
    int mLastUpdateId -> fD
    java.lang.Thread updateThread -> fE
    com.nd.weather.widget.TimeService$UpdateInfo[] mUpdateQueue -> fF
    boolean bInGps -> fG
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void autoUpdateWeather$550f3726(android.content.Context,int,java.lang.String) -> a
    void autoUpdateFirstWeather(android.content.Context,boolean) -> a
    void setFirstCityID(android.content.Context,int) -> d
    void localCtiy(android.content.Context) -> t
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void onStart(android.content.Intent,int) -> onStart
    void doNewCmd(android.content.Intent) -> b
    void onDestroy() -> onDestroy
    boolean isEqual(com.nd.weather.widget.TimeService$UpdateInfo,java.lang.String,int) -> a
    void auotUpdateWeather(java.lang.String,int,boolean) -> a
    void sendWeatherToPandaHome(java.lang.String,com.calendar.CommData.CityWeatherInfo) -> a
    void updateWeather(java.lang.String,int,boolean) -> b
    void getLocalCity(com.nd.calendar.module.gps.LocManager$Result) -> c
    com.nd.weather.widget.TimeService$UpdateInfo[] access$0(com.nd.weather.widget.TimeService) -> a
    void access$1$3a73325a(com.nd.weather.widget.TimeService) -> b
    com.nd.calendar.module.IGpsSeverModule access$2(com.nd.weather.widget.TimeService) -> c
    void access$3$1a7f928b(com.nd.weather.widget.TimeService) -> d
com.nd.weather.widget.TimeService$1 -> com.nd.weather.widget.b:
    com.nd.weather.widget.TimeService this$0 -> fH
    java.lang.String val$sCode -> fI
    int val$id -> fJ
    void run() -> run
com.nd.weather.widget.TimeService$2 -> com.nd.weather.widget.c:
    com.nd.weather.widget.TimeService this$0 -> fH
    void run() -> run
com.nd.weather.widget.TimeService$3 -> com.nd.weather.widget.d:
    com.nd.weather.widget.TimeService this$0 -> fH
    void gotLocation(com.nd.calendar.module.gps.LocManager$Result) -> b
com.nd.weather.widget.TimeService$4 -> com.nd.weather.widget.e:
    com.nd.weather.widget.TimeService this$0 -> fH
    com.nd.calendar.module.gps.LocManager$Result val$location -> fK
    void run() -> run
com.nd.weather.widget.TimeService$UpdateInfo -> com.nd.weather.widget.f:
    java.lang.String code -> g
    int id -> id
    com.nd.weather.widget.TimeService this$0 -> fH
com.nd.weather.widget.UI.BaseDialog -> com.nd.weather.widget.UI.a:
    com.nd.calendar.Control.OnMyDialogClickListener m_OnMyDialogClickListener -> fL
    com.nd.calendar.Control.ICalendarContext m_calendarMgr -> fM
    android.content.Context mCtx -> fN
    void setOnMyDialogClickListener(com.nd.calendar.Control.OnMyDialogClickListener) -> a
    void dismiss() -> dismiss
com.nd.weather.widget.UI.CommonDialog -> com.nd.weather.widget.UI.b:
com.nd.weather.widget.UI.CommonDialog$Builder -> com.nd.weather.widget.UI.c:
    android.content.Context context -> fO
    android.graphics.drawable.Drawable icon -> icon
    java.lang.CharSequence title -> title
    java.lang.CharSequence message -> fP
    java.lang.CharSequence positiveButtonText -> fQ
    java.lang.CharSequence negativeButtonText -> fR
    android.view.View contentView -> fS
    android.content.DialogInterface$OnClickListener positiveButtonClickListener -> fT
    android.content.DialogInterface$OnClickListener negativeButtonClickListener -> fU
    com.nd.weather.widget.UI.CommonDialog$Builder setMessage(java.lang.CharSequence) -> a
    com.nd.weather.widget.UI.CommonDialog$Builder setTitle(java.lang.CharSequence) -> b
    com.nd.weather.widget.UI.CommonDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener) -> a
    com.nd.weather.widget.UI.CommonDialog$Builder setNegativeButton(int,android.content.DialogInterface$OnClickListener) -> b
    com.nd.weather.widget.UI.CommonDialog create() -> bH
    android.content.DialogInterface$OnClickListener access$0(com.nd.weather.widget.UI.CommonDialog$Builder) -> a
    android.content.DialogInterface$OnClickListener access$1(com.nd.weather.widget.UI.CommonDialog$Builder) -> b
com.nd.weather.widget.UI.CommonDialog$Builder$1 -> com.nd.weather.widget.UI.d:
    com.nd.weather.widget.UI.CommonDialog$Builder this$1 -> fV
    com.nd.weather.widget.UI.CommonDialog val$dialog -> fW
    void onClick(android.view.View) -> onClick
com.nd.weather.widget.UI.CommonDialog$Builder$2 -> com.nd.weather.widget.UI.e:
    com.nd.weather.widget.UI.CommonDialog$Builder this$1 -> fV
    com.nd.weather.widget.UI.CommonDialog val$dialog -> fW
    void onClick(android.view.View) -> onClick
com.nd.weather.widget.UI.CommonUI -> com.nd.weather.widget.UI.f:
    void ShowNetworkSet(android.content.Context) -> u
    void downCalendarApk(android.content.Context) -> v
com.nd.weather.widget.UI.CommonUI$1 -> com.nd.weather.widget.UI.g:
    android.content.Context val$activity -> fX
    void onClick(android.content.DialogInterface,int) -> onClick
com.nd.weather.widget.UI.CommonUI$2 -> com.nd.weather.widget.UI.h:
    void onClick(android.content.DialogInterface,int) -> onClick
com.nd.weather.widget.UI.CommonUI$3 -> com.nd.weather.widget.UI.i:
    com.nd.weather.widget.UI.CommonUI$IOnDownLoad val$onDownLoad -> fY
    void onClick(android.content.DialogInterface,int) -> onClick
com.nd.weather.widget.UI.CommonUI$4 -> com.nd.weather.widget.UI.j:
    void onClick(android.content.DialogInterface,int) -> onClick
com.nd.weather.widget.UI.CommonUI$5 -> com.nd.weather.widget.UI.k:
    android.content.Context val$ctx -> fZ
    void onDownLoad() -> bI
com.nd.weather.widget.UI.CommonUI$IOnDownLoad -> com.nd.weather.widget.UI.l:
    void onDownLoad() -> bI
com.nd.weather.widget.UI.UIBaseAty -> com.nd.weather.widget.UI.UIBaseAty:
    com.nd.calendar.Control.ICalendarContext m_calendarMgr -> fM
    void onCreate(android.os.Bundle) -> onCreate
    void onStop() -> onStop
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void finish() -> finish
com.nd.weather.widget.UI.UICalendarGuideAty -> com.nd.weather.widget.UI.UICalendarGuideAty:
    java.lang.String CALENDAR_FILE -> ga
    java.lang.String HUANGLI_FILE -> gb
    java.lang.String CALENDAR_DOWN_URL -> gc
    java.lang.String HUANGLI_DOWN_URL -> gd
    android.widget.ImageView mIvImage -> ge
    android.widget.ProgressBar mPbar -> gf
    android.widget.TextView mtvHint -> gg
    android.widget.Button mbtnDownLoad -> gh
    java.lang.String mDownUrl -> gi
    java.io.File mFile -> gj
    java.lang.ref.SoftReference mDrawable -> gk
    android.view.View$OnClickListener onAdDownClick -> gl
    android.view.View$OnClickListener onCloseClick -> gm
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void loadImage(java.io.File) -> e
    void finish() -> finish
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    android.widget.ImageView access$0(com.nd.weather.widget.UI.UICalendarGuideAty) -> a
    void access$1(com.nd.weather.widget.UI.UICalendarGuideAty,java.io.File) -> a
    android.widget.TextView access$2(com.nd.weather.widget.UI.UICalendarGuideAty) -> b
    android.widget.ProgressBar access$3(com.nd.weather.widget.UI.UICalendarGuideAty) -> c
com.nd.weather.widget.UI.UICalendarGuideAty$1 -> com.nd.weather.widget.UI.m:
    com.nd.weather.widget.UI.UICalendarGuideAty this$0 -> gn
    void onClick(android.view.View) -> onClick
com.nd.weather.widget.UI.UICalendarGuideAty$2 -> com.nd.weather.widget.UI.n:
    com.nd.weather.widget.UI.UICalendarGuideAty this$0 -> gn
    void onClick(android.view.View) -> onClick
com.nd.weather.widget.UI.UICalendarGuideAty$3 -> com.nd.weather.widget.UI.o:
    com.nd.weather.widget.UI.UICalendarGuideAty this$0 -> gn
    java.lang.String val$url -> go
    java.io.File val$savePath -> gp
    void run() -> run
com.nd.weather.widget.UI.UICalendarGuideAty$3$1 -> com.nd.weather.widget.UI.p:
    com.nd.weather.widget.UI.UICalendarGuideAty$3 this$1 -> gq
    boolean val$downRet -> gr
    java.io.File val$savePath -> gp
    void run() -> run
com.nd.weather.widget.UI.setting.UISettingAboutAty -> com.nd.weather.widget.UI.setting.UISettingAboutAty:
    android.widget.Button m_btnUpdate -> gs
    android.widget.TextView m_verTextView -> gt
    android.widget.TextView m_htmlTextView -> gu
    android.widget.TextView m_aboutTextView -> gv
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
com.nd.weather.widget.UI.setting.UISettingActivity -> com.nd.weather.widget.UI.setting.UISettingActivity:
    android.widget.TextView txtWeatherRefresh -> gw
    android.widget.TextView txtVersion -> gx
    android.widget.TextView txtPmSource -> gy
    android.view.View vNewFlag -> gz
    com.nd.calendar.common.ConfigHelper mCfgHelper -> gA
    android.content.Context mContext -> mContext
    boolean bneedClose -> gB
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onClick(android.view.View) -> onClick
    void setNeedClose() -> bJ
com.nd.weather.widget.UI.setting.UISettingPmSourceAty -> com.nd.weather.widget.UI.setting.UISettingPmSourceAty:
    android.view.ViewGroup btnUsa -> gC
    android.view.ViewGroup btnGov -> gD
    android.widget.RadioButton chkUsa -> gE
    android.widget.RadioButton chkGov -> gF
    android.widget.Button btnBack -> gG
    java.lang.String mCurrSource -> gH
    com.nd.calendar.common.ConfigHelper mCfgHelper -> gA
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
    void setCheckBox(java.lang.String) -> aB
com.nd.weather.widget.UI.setting.UISettingWeatherAty -> com.nd.weather.widget.UI.setting.UISettingWeatherAty:
    android.widget.TextView mtvUpdateState -> gI
    android.widget.TextView mtvStartEndTimeState -> gJ
    android.widget.TextView mtv4IntervalState -> gK
    com.nd.calendar.common.ConfigHelper mCfgHelper -> gA
    android.widget.CheckBox mcbUpdate -> gL
    com.nd.weather.widget.Ctrl.SinglePopupWindow mPwInveralTime -> gM
    com.nd.weather.widget.Ctrl.TimePopupWindow mPwStartEndTime -> gN
    int iBeginHour -> gO
    int iBeginMin -> gP
    int iEndHour -> gQ
    int iEndMin -> gR
    float i4Interval -> gS
    java.lang.Float[] mInveral -> gT
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
    com.nd.weather.widget.Ctrl.TimePopupWindow access$0(com.nd.weather.widget.UI.setting.UISettingWeatherAty) -> a
    com.nd.calendar.common.ConfigHelper access$1(com.nd.weather.widget.UI.setting.UISettingWeatherAty) -> b
    android.widget.TextView access$2(com.nd.weather.widget.UI.setting.UISettingWeatherAty) -> c
    com.nd.weather.widget.Ctrl.SinglePopupWindow access$3(com.nd.weather.widget.UI.setting.UISettingWeatherAty) -> d
    android.widget.TextView access$4(com.nd.weather.widget.UI.setting.UISettingWeatherAty) -> e
com.nd.weather.widget.UI.setting.UISettingWeatherAty$1 -> com.nd.weather.widget.UI.setting.a:
    com.nd.weather.widget.UI.setting.UISettingWeatherAty this$0 -> gU
    void onClick(android.view.View) -> onClick
com.nd.weather.widget.UI.setting.UISettingWeatherAty$2 -> com.nd.weather.widget.UI.setting.b:
    com.nd.weather.widget.UI.setting.UISettingWeatherAty this$0 -> gU
    void onClick(android.view.View) -> onClick
com.nd.weather.widget.UI.setting.UISubmitOpinionAty -> com.nd.weather.widget.UI.setting.UISubmitOpinionAty:
    android.widget.Button m_btnback -> gV
    android.widget.Button m_btnSubmin -> gW
    android.widget.EditText m_editSubMessage -> gX
    android.widget.TextView m_textViewHit -> gY
    android.widget.ListView m_SuggestListView -> gZ
    java.util.List m_listSendSuggestInfo -> ha
    java.util.Vector m_suggestInfos -> hb
    com.nd.calendar.Control.SuggestListAdapter m_suggestListAdapter -> hc
    android.text.TextWatcher textwatcher -> hd
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
    android.app.Dialog onCreateDialog(int) -> onCreateDialog
    void access$0(com.nd.weather.widget.UI.setting.UISubmitOpinionAty) -> a
com.nd.weather.widget.UI.setting.UISubmitOpinionAty$1 -> com.nd.weather.widget.UI.setting.c:
    com.nd.weather.widget.UI.setting.UISubmitOpinionAty this$0 -> he
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.nd.weather.widget.UI.setting.UISubmitOpinionAty$ProgressTask -> com.nd.weather.widget.UI.setting.d:
    java.lang.String strContactinfo -> hf
    java.lang.String strSuggest -> hg
    com.nd.weather.widget.UI.setting.UISubmitOpinionAty this$0 -> he
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.nd.weather.widget.UI.setting.UISubmitOpinionAty$ShowSuggestTask -> com.nd.weather.widget.UI.setting.e:
    com.nd.weather.widget.UI.setting.UISubmitOpinionAty this$0 -> he
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
com.nd.weather.widget.UI.weather.AllDayWeatherView -> com.nd.weather.widget.UI.weather.AllDayWeatherView:
    int swipe_threshold_veloicty -> hh
    int swipe_min_distance -> hi
    com.nd.weather.widget.UI.weather.DayWeatherView mWeatherView -> hj
    com.nd.weather.widget.UI.weather.TemperatureCurveView mTempCurveView -> hk
    android.view.GestureDetector m_gestureDetector -> hl
    android.content.Context mContext -> mContext
    com.nd.weather.widget.UI.weather.AllDayWeatherView$IOnDayWeatherListener mOnDayWeatherListener -> hm
    android.view.animation.Animation m_AnimLeft_in -> hn
    android.view.animation.Animation m_AnimLeft_out -> ho
    android.view.animation.Animation m_AnimRight_in -> hp
    android.view.animation.Animation m_AnimRight_out -> hq
    android.graphics.Path mPath -> hr
    int mPadding -> hs
    android.view.View$OnClickListener onViewClick -> ht
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    void onFinishInflate() -> onFinishInflate
    void setDayWeatherInfo(com.calendar.CommData.DayWeatherInfo,int) -> a
    void refreshYiJiData(java.lang.String,boolean) -> e
    void setOnDayWeatherListener(com.nd.weather.widget.UI.weather.AllDayWeatherView$IOnDayWeatherListener) -> a
    void switchView(int) -> q
    boolean onDown(android.view.MotionEvent) -> onDown
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    void onLongPress(android.view.MotionEvent) -> onLongPress
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    void onShowPress(android.view.MotionEvent) -> onShowPress
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    void clearBitmap() -> bK
    com.nd.weather.widget.UI.weather.AllDayWeatherView$IOnDayWeatherListener access$0(com.nd.weather.widget.UI.weather.AllDayWeatherView) -> a
com.nd.weather.widget.UI.weather.AllDayWeatherView$1 -> com.nd.weather.widget.UI.weather.a:
    com.nd.weather.widget.UI.weather.AllDayWeatherView this$0 -> hu
    void onClick(android.view.View) -> onClick
com.nd.weather.widget.UI.weather.AllDayWeatherView$IOnDayWeatherListener -> com.nd.weather.widget.UI.weather.b:
    void onDayWeatherFling() -> bL
com.nd.weather.widget.UI.weather.CityViewFlipper -> com.nd.weather.widget.UI.weather.CityViewFlipper:
    int swipe_threshold_veloicty -> hh
    int swipe_min_distance -> hi
    android.view.animation.Animation m_AnimLeft_in -> hn
    android.view.animation.Animation m_AnimLeft_out -> ho
    android.view.animation.Animation m_AnimRight_in -> hp
    android.view.animation.Animation m_AnimRight_out -> hq
    android.view.GestureDetector m_gestureDetector -> hl
    android.content.Context mContext -> mContext
    com.nd.weather.widget.UI.weather.CityWeatherView[] mCityViews -> hv
    java.util.List m_arrListInfo -> hw
    int mCityItem -> hx
    com.nd.weather.widget.UI.weather.CityViewFlipper$IOnFlipperCity mOnFlipperCity -> hy
    void onFinishInflate() -> onFinishInflate
    void setData(java.util.List) -> a
    void setOnFlipperCity(com.nd.weather.widget.UI.weather.CityViewFlipper$IOnFlipperCity) -> a
    void setCurrentItem(int) -> p
    void refreshCurrentWeather() -> bM
    boolean onDown(android.view.MotionEvent) -> onDown
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    void onLongPress(android.view.MotionEvent) -> onLongPress
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    void onShowPress(android.view.MotionEvent) -> onShowPress
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    com.calendar.CommData.CityWeatherInfo getDisplayCityInfo() -> bN
    void refreshDisplayCity() -> bO
    void refreshWeatherImgWithSun() -> bP
    void refreshState(com.calendar.CommData.CityWeatherInfo) -> d
    void refreshWarning(com.calendar.CommData.CityWeatherInfo) -> e
    void refreshPMIndex() -> bQ
    void clearBitmap() -> bK
com.nd.weather.widget.UI.weather.CityViewFlipper$IOnFlipperCity -> com.nd.weather.widget.UI.weather.c:
    void onFilpperCityEnd(com.calendar.CommData.CityWeatherInfo) -> f
com.nd.weather.widget.UI.weather.CityWeatherView -> com.nd.weather.widget.UI.weather.d:
    android.content.Context mContext -> mContext
    android.content.res.Resources mRes -> hz
    com.nd.calendar.common.ConfigHelper mCfgHelper -> gA
    android.widget.TextView tvWarningInfo -> hA
    android.widget.TextView tvCity -> hB
    android.widget.TextView tvNowTemp -> hC
    android.widget.TextView tvCityCount -> hD
    android.widget.TextView tvNowWeath -> hE
    android.widget.TextView tvRefTime -> hF
    android.widget.TextView tvWeatherIndex -> hG
    android.widget.ImageView imageNow -> hH
    android.view.View mView -> hI
    int m_iCityNameSize -> hJ
    java.lang.Object mLockData -> hK
    com.nd.weather.widget.UI.weather.CityWeatherView$DataPackage mDataPackage -> hL
    int mLastStyle -> hM
    int mCurrPos -> hN
    int mTotalCount -> hO
    com.calendar.CommData.CityWeatherInfo mCityWeatherInfo -> hP
    boolean bProcessWarning -> hQ
    java.lang.StringBuilder mTempBuffer -> hR
    int MSG_WARNING_ICO_FINISH -> hS
    android.view.View getView() -> getView
    void setData(com.calendar.CommData.CityWeatherInfo,int,int) -> a
    void refreshState() -> bR
    void refreshWeather() -> bS
    void refreshWarning() -> bT
    void refreshPMParam() -> bU
    void refreshWeatherImgWithSun() -> bP
    void LoadWarning() -> bV
    void LoadWeatherAndPMParam() -> bW
    void refreshNowWeatherImg() -> bX
    void onClick(android.view.View) -> onClick
    com.calendar.CommData.CityWeatherInfo getCityWeatherInfo() -> bY
    void clearBitmap() -> bK
    java.lang.Object access$0(com.nd.weather.widget.UI.weather.CityWeatherView) -> a
    android.content.res.Resources access$1(com.nd.weather.widget.UI.weather.CityWeatherView) -> b
    com.calendar.CommData.CityWeatherInfo access$2(com.nd.weather.widget.UI.weather.CityWeatherView) -> c
    android.widget.TextView access$3(com.nd.weather.widget.UI.weather.CityWeatherView) -> d
    android.content.Context access$4(com.nd.weather.widget.UI.weather.CityWeatherView) -> e
    void access$5$3512e2b3(com.nd.weather.widget.UI.weather.CityWeatherView) -> f
com.nd.weather.widget.UI.weather.CityWeatherView$DataPackage -> com.nd.weather.widget.UI.weather.e:
    boolean bAvailable -> hT
    com.nd.weather.widget.UI.weather.CityWeatherView this$0 -> hU
    void handleMessage(android.os.Message) -> handleMessage
com.nd.weather.widget.UI.weather.DayWeatherView -> com.nd.weather.widget.UI.weather.DayWeatherView:
    android.content.Context mContext -> mContext
    android.widget.ImageView[] imDayIco -> hV
    android.widget.TextView[] tvDayWeather -> hW
    android.widget.TextView m_textYu -> hX
    android.widget.TextView m_textji -> hY
    android.widget.TextView m_textNongli -> hZ
    android.widget.TextView m_tvJieQi -> ia
    android.widget.TextView m_gmtTag -> ib
    com.calendar.CommData.DayWeatherInfo mDayWeatherInfo -> ic
    boolean bDataChanged -> ie
    int mLastStyle -> hM
    android.content.res.Resources mRes -> hz
    java.lang.String m_gmt -> if
    com.calendar.CommData.DateInfo m_date -> ig
    android.view.View mParent -> ih
    com.nd.calendar.Control.ICalendarContext m_calendarMgr -> fM
    void onFinishInflate() -> onFinishInflate
    void setParentView(android.view.View) -> b
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void onClick(android.view.View) -> onClick
    void startGuide(int,java.lang.String) -> c
    void refreshView() -> bZ
    void setData(com.calendar.CommData.DayWeatherInfo) -> b
    void refreshYiJiData(java.lang.String,boolean) -> e
com.nd.weather.widget.UI.weather.TemperatureCurveView -> com.nd.weather.widget.UI.weather.f:
    android.content.Context mContext -> mContext
    android.content.res.Resources mRes -> hz
    int mLastStyle -> hM
    com.calendar.CommData.DayWeatherInfo weathInfo -> ii
    com.nd.weather.widget.UI.weather.TemperatureCurveView$DrawTempCure mDraw -> ij
    int mLineColor -> ik
    int mWeekColor -> il
    java.lang.StringBuilder mTempBuffer -> hR
    int mWidth -> im
    int mHeight -> in
    void setData(com.calendar.CommData.DayWeatherInfo) -> b
    void refreshView() -> bZ
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    android.content.res.Resources access$0(com.nd.weather.widget.UI.weather.TemperatureCurveView) -> a
    void access$1(com.nd.weather.widget.UI.weather.TemperatureCurveView,int) -> a
    void access$2(com.nd.weather.widget.UI.weather.TemperatureCurveView,int) -> b
    com.nd.weather.widget.UI.weather.TemperatureCurveView$DrawTempCure access$3(com.nd.weather.widget.UI.weather.TemperatureCurveView) -> b
    int access$4(com.nd.weather.widget.UI.weather.TemperatureCurveView) -> c
    int access$5(com.nd.weather.widget.UI.weather.TemperatureCurveView) -> d
    int access$6(com.nd.weather.widget.UI.weather.TemperatureCurveView) -> e
    int access$7(com.nd.weather.widget.UI.weather.TemperatureCurveView) -> f
    com.calendar.CommData.DayWeatherInfo access$8(com.nd.weather.widget.UI.weather.TemperatureCurveView) -> g
    android.content.Context access$9(com.nd.weather.widget.UI.weather.TemperatureCurveView) -> h
    java.lang.StringBuilder access$10(com.nd.weather.widget.UI.weather.TemperatureCurveView) -> i
com.nd.weather.widget.UI.weather.TemperatureCurveView$DrawTempCure -> com.nd.weather.widget.UI.weather.g:
    int[] iHigh -> io
    int[] iLow -> ip
    android.graphics.Paint pLineHeight -> iq
    android.graphics.Paint pLineLow -> ir
    android.graphics.Paint pLine -> is
    android.graphics.Paint pWeek -> it
    android.text.TextPaint pTempText -> iu
    float factor -> iv
    float weekY -> iw
    float tempY -> ix
    float curvetop -> iy
    float curvebottom -> iz
    android.graphics.Bitmap nodeHeight -> iA
    android.graphics.Bitmap nodeLow -> iB
    float maxH -> iC
    float minH -> iD
    com.nd.weather.widget.UI.weather.TemperatureCurveView this$0 -> iE
    void access$0(com.nd.weather.widget.UI.weather.TemperatureCurveView$DrawTempCure,com.calendar.CommData.DayWeatherInfo) -> a
    void access$1(com.nd.weather.widget.UI.weather.TemperatureCurveView$DrawTempCure,android.graphics.Canvas) -> a
com.nd.weather.widget.UI.weather.UICitySelectDialog -> com.nd.weather.widget.UI.weather.h:
    java.lang.String Tag -> iF
    java.lang.String[][] POPULAR_CITIES -> iG
    java.lang.String[][] POPULAR_SCENIC -> iH
    java.lang.String[][] POPULAR_FOREIGN_CITY -> iI
    android.content.Context mContext -> mContext
    android.widget.LinearLayout m_layoutNavAll -> iJ
    android.widget.GridView m_gvHot -> iK
    android.widget.GridView m_gvAll -> iL
    android.widget.GridView m_gvCity -> iM
    android.widget.LinearLayout m_layoutNavSel -> iN
    android.widget.TextView m_itemNav1 -> iO
    android.widget.TextView m_itemNav2 -> iP
    android.widget.TextView m_itemNav3 -> iQ
    android.widget.TextView m_icoNav3 -> iR
    android.widget.EditText m_etSeach -> iS
    android.widget.RadioGroup m_CityGroup -> iT
    android.widget.ScrollView m_ForeignCountryView -> iU
    android.widget.GridView m_gvForeignCountry3 -> iV
    android.widget.GridView m_gvForeignCountry2 -> iW
    android.widget.GridView m_gvForeignCountry1 -> iX
    int m_nViewType -> iY
    int m_nViewLeve -> iZ
    boolean m_bViewTypeChanged -> ja
    android.widget.ListView m_listViewSearch -> jb
    com.nd.calendar.Control.ListViewAdapter m_adapterSearch -> jc
    java.util.List m_searchList -> jd
    int m_nColorFinalOption -> je
    int m_nColorMiddleOption -> jf
    com.calendar.CommData.CityStruct m_curProv -> jg
    com.calendar.CommData.CityStruct m_curCity -> jh
    com.nd.calendar.Control.CityListAdapter m_adapterHotCity -> ji
    com.nd.calendar.Control.CityListAdapter m_adapterHotScenic -> jj
    com.nd.calendar.Control.CityListAdapter m_adapterAllProv -> jk
    com.nd.calendar.Control.CityListAdapter m_adapterCity -> jl
    com.nd.calendar.Control.CityListAdapter m_adapterCountry -> jm
    com.nd.calendar.Control.CityListAdapter m_adapterScenic -> jn
    com.nd.calendar.Control.CityListAdapter m_adapterHotForeignCity -> jo
    com.nd.calendar.Control.CityListAdapter m_adapterForeignCountry3 -> jp
    com.nd.calendar.Control.CityListAdapter m_adapterForeignCountry2 -> jq
    com.nd.calendar.Control.CityListAdapter m_adapterForeignCountry1 -> jr
    com.nd.calendar.Control.CityListAdapter m_adapterForeignCity -> js
    int LEVEL_ONE_INTERFACE -> jt
    int LEVEL_TWO_INTERFACE -> ju
    int LEVEL_THREE_INTERFACE -> jv
    java.util.ArrayList m_vecHotCity -> jw
    java.util.ArrayList m_vecHotScenic -> jx
    java.util.ArrayList m_vecAllProv -> jy
    java.util.ArrayList m_vecCity -> jz
    java.util.ArrayList m_vecScenic -> jA
    java.util.ArrayList m_vecCountry -> jB
    java.util.ArrayList m_vecHotForeignCity -> jC
    java.util.List m_vecForeignCountry3 -> jD
    java.util.List m_vecForeignCountry2 -> jE
    java.util.List m_vecForeignCountry1 -> jF
    java.util.ArrayList m_vecForeignCity -> jG
    java.util.ArrayList m_VecCitySearchResult -> jH
    java.util.ArrayList m_VecScenicSearchResult -> jI
    java.util.ArrayList m_VecForeignCitySearchResult -> jJ
    com.nd.calendar.module.ICoustoModule m_DbMdl -> jK
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onCreate(android.os.Bundle) -> onCreate
    void resetCityDlg() -> ca
    void refreshInterface() -> cb
    void setGridViewHeight(android.widget.GridView,int) -> a
    void fillHotCityView() -> cc
    void fillAllProvView() -> cd
    void fillCityOfProvView() -> ce
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void CommitResult(com.calendar.CommData.CityStruct) -> b
    void onClick(android.view.View) -> onClick
    void changeViewType() -> cf
    void SearchCity(java.lang.String) -> aC
    void convert(java.util.List,java.util.List) -> a
    void onStop() -> onStop
    void onCheckedChanged(android.widget.RadioGroup,int) -> onCheckedChanged
    boolean doBack() -> cg
    java.lang.String access$0(com.nd.weather.widget.UI.weather.UICitySelectDialog) -> a
    android.widget.EditText access$1(com.nd.weather.widget.UI.weather.UICitySelectDialog) -> b
    java.util.List access$2(com.nd.weather.widget.UI.weather.UICitySelectDialog) -> c
    void access$3(com.nd.weather.widget.UI.weather.UICitySelectDialog,com.calendar.CommData.CityStruct) -> a
com.nd.weather.widget.UI.weather.UICitySelectDialog$1 -> com.nd.weather.widget.UI.weather.i:
    com.nd.weather.widget.UI.weather.UICitySelectDialog this$0 -> jL
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.nd.weather.widget.UI.weather.UICitySelectDialog$2 -> com.nd.weather.widget.UI.weather.j:
    com.nd.weather.widget.UI.weather.UICitySelectDialog this$0 -> jL
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
com.nd.weather.widget.UI.weather.UICitySelectDialog$3 -> com.nd.weather.widget.UI.weather.k:
    com.nd.weather.widget.UI.weather.UICitySelectDialog this$0 -> jL
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.nd.weather.widget.UI.weather.UIWeatherFragmentAty -> com.nd.weather.widget.UI.weather.UIWeatherFragmentAty:
    com.nd.calendar.Control.ICalendarContext m_calendarMgr -> fM
    com.nd.weather.widget.UI.weather.CityViewFlipper mPager -> jM
    android.widget.RadioGroup mRgViewType -> jN
    android.view.View mMainBk -> jO
    boolean m_bFinshUpdate -> jP
    boolean mToRefresh -> jQ
    java.lang.String mLastPMSource -> jR
    com.nd.calendar.common.ConfigHelper mCfgHelper -> gA
    com.nd.weather.widget.UI.weather.AllDayWeatherView mAllDayWeatherView -> jS
    java.util.List m_arrListInfo -> hw
    boolean mbRefreshWidget -> jT
    int MSG_WEATHER_PROGRESS -> jU
    int MSG_WEATHER_FINISH -> jV
    int MSG_WARNING_FINISH -> jW
    int MSG_SYSTIME_TIME_ERROR -> jX
    int MSG_REFRESH_PM_PARAM -> jY
    int mLastGetDate -> jZ
    boolean bFromWidget -> ka
    boolean mNeedRefreshView -> kb
    int mCityIndex -> kc
    int mTimeZoneOffset -> kd
    android.os.Handler initHandler -> ke
    android.widget.RadioGroup$OnCheckedChangeListener onCheckChange -> kf
    android.content.BroadcastReceiver mReceiver -> kg
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void onClick(android.view.View) -> onClick
    void setCurrentItem() -> ch
    void RefreshData() -> ci
    void setRefreshRetrunFromSubAty$1385ff() -> cj
    boolean isNewDay() -> ck
    boolean isNeedReadCache(com.nd.calendar.Control.ICalendarContext) -> a
    void setCityIndex(int) -> r
    void setAllDayWeatherView(com.calendar.CommData.CityWeatherInfo) -> g
    void onDayWeatherFling() -> bL
    void onFilpperCityEnd(com.calendar.CommData.CityWeatherInfo) -> f
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    com.nd.weather.widget.UI.weather.CityViewFlipper access$0(com.nd.weather.widget.UI.weather.UIWeatherFragmentAty) -> a
    void access$1(com.nd.weather.widget.UI.weather.UIWeatherFragmentAty,com.calendar.CommData.CityWeatherInfo) -> a
    void access$2$284fafd1(com.nd.weather.widget.UI.weather.UIWeatherFragmentAty) -> b
    com.nd.weather.widget.UI.weather.AllDayWeatherView access$3(com.nd.weather.widget.UI.weather.UIWeatherFragmentAty) -> c
    boolean access$4() -> cl
    void access$5$1385ff() -> cm
    void access$6(com.nd.weather.widget.UI.weather.UIWeatherFragmentAty,boolean) -> a
    java.util.List access$7(com.nd.weather.widget.UI.weather.UIWeatherFragmentAty) -> d
    com.nd.calendar.common.ConfigHelper access$8(com.nd.weather.widget.UI.weather.UIWeatherFragmentAty) -> e
    java.lang.String access$9(com.nd.weather.widget.UI.weather.UIWeatherFragmentAty) -> f
    void access$10(com.nd.weather.widget.UI.weather.UIWeatherFragmentAty,java.lang.String) -> a
    void access$11(com.nd.weather.widget.UI.weather.UIWeatherFragmentAty) -> g
    android.os.Handler access$12(com.nd.weather.widget.UI.weather.UIWeatherFragmentAty) -> h
    int access$13(com.nd.weather.widget.UI.weather.UIWeatherFragmentAty) -> i
com.nd.weather.widget.UI.weather.UIWeatherFragmentAty$1 -> com.nd.weather.widget.UI.weather.l:
    com.nd.weather.widget.UI.weather.UIWeatherFragmentAty this$0 -> kh
    void handleMessage(android.os.Message) -> handleMessage
    com.nd.weather.widget.UI.weather.UIWeatherFragmentAty access$0(com.nd.weather.widget.UI.weather.UIWeatherFragmentAty$1) -> a
com.nd.weather.widget.UI.weather.UIWeatherFragmentAty$1$1 -> com.nd.weather.widget.UI.weather.m:
    com.nd.weather.widget.UI.weather.UIWeatherFragmentAty$1 this$1 -> ki
    com.calendar.CommData.CityWeatherInfo val$cityInfo -> kj
    void run() -> run
com.nd.weather.widget.UI.weather.UIWeatherFragmentAty$2 -> com.nd.weather.widget.UI.weather.n:
    com.nd.weather.widget.UI.weather.UIWeatherFragmentAty this$0 -> kh
    void onCheckedChanged(android.widget.RadioGroup,int) -> onCheckedChanged
com.nd.weather.widget.UI.weather.UIWeatherFragmentAty$3 -> com.nd.weather.widget.UI.weather.o:
    com.nd.weather.widget.UI.weather.UIWeatherFragmentAty this$0 -> kh
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.nd.weather.widget.UI.weather.UIWeatherFragmentAty$4 -> com.nd.weather.widget.UI.weather.p:
    com.nd.weather.widget.UI.weather.UIWeatherFragmentAty this$0 -> kh
    void run() -> run
com.nd.weather.widget.UI.weather.UIWeatherFragmentAty$5 -> com.nd.weather.widget.UI.weather.q:
    com.nd.weather.widget.UI.weather.UIWeatherFragmentAty this$0 -> kh
    com.calendar.CommData.CityWeatherInfo val$c -> kk
    void run() -> run
com.nd.weather.widget.UI.weather.UIWeatherFragmentAty$6 -> com.nd.weather.widget.UI.weather.r:
    com.nd.weather.widget.UI.weather.UIWeatherFragmentAty this$0 -> kh
    void run() -> run
com.nd.weather.widget.UI.weather.UIWeatherSetAty -> com.nd.weather.widget.UI.weather.UIWeatherSetAty:
    android.widget.Button m_btnBack -> kl
    android.widget.TextView m_textPost -> km
    android.widget.CheckBox m_checkGps -> kn
    com.nd.weather.widget.Ctrl.DragListView m_dragListView -> ko
    com.nd.weather.widget.UI.weather.UICitySelectDialog m_citySeachdialog -> kp
    android.widget.Button m_btnCityAdd -> kq
    android.view.ViewGroup m_btnCityDel -> kr
    android.view.ViewGroup m_btnCityOrder -> ks
    android.view.ViewGroup m_llSetMenu -> kt
    android.view.ViewGroup m_llFinish -> ku
    android.widget.TextView m_tvOperHint -> kv
    com.nd.calendar.module.IGpsSeverModule m_gpsSeverMdl -> fC
    java.util.List m_listData -> kw
    com.nd.calendar.Control.DragListAdapter m_listAdapter -> kx
    boolean mDataChanged -> ky
    android.widget.AdapterView$OnItemClickListener onItemClick -> kz
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void initData() -> cn
    void AddItemData(com.calendar.CommData.CityInfo) -> b
    void onClick(android.view.View) -> onClick
    void deleteCities() -> co
    void showFinishPanel(boolean,int) -> a
    boolean checkLocationService() -> cp
    void getCityLocation() -> cq
    boolean doBack() -> cg
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onDismiss(android.content.DialogInterface) -> onDismiss
    void SetOnSelectDataItem(com.calendar.CommData.CityStruct) -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    void onStop() -> onStop
    com.nd.calendar.Control.DragListAdapter access$0(com.nd.weather.widget.UI.weather.UIWeatherSetAty) -> a
    java.util.List access$1(com.nd.weather.widget.UI.weather.UIWeatherSetAty) -> b
    void access$2$24d00a1d(com.nd.weather.widget.UI.weather.UIWeatherSetAty) -> c
    void access$3(com.nd.weather.widget.UI.weather.UIWeatherSetAty) -> d
    com.nd.calendar.module.IGpsSeverModule access$4(com.nd.weather.widget.UI.weather.UIWeatherSetAty) -> e
    android.widget.TextView access$5(com.nd.weather.widget.UI.weather.UIWeatherSetAty) -> f
    android.widget.CheckBox access$6(com.nd.weather.widget.UI.weather.UIWeatherSetAty) -> g
    void access$7(com.nd.weather.widget.UI.weather.UIWeatherSetAty) -> h
com.nd.weather.widget.UI.weather.UIWeatherSetAty$1 -> com.nd.weather.widget.UI.weather.s:
    com.nd.weather.widget.UI.weather.UIWeatherSetAty this$0 -> kA
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.nd.weather.widget.UI.weather.UIWeatherSetAty$2 -> com.nd.weather.widget.UI.weather.t:
    com.nd.weather.widget.UI.weather.UIWeatherSetAty this$0 -> kA
    void run() -> run
com.nd.weather.widget.UI.weather.UIWeatherSetAty$3 -> com.nd.weather.widget.UI.weather.u:
    com.nd.weather.widget.UI.weather.UIWeatherSetAty this$0 -> kA
    void run() -> run
com.nd.weather.widget.UI.weather.UIWeatherSetAty$4 -> com.nd.weather.widget.UI.weather.v:
    com.nd.weather.widget.UI.weather.UIWeatherSetAty this$0 -> kA
    void gotLocation(com.nd.calendar.module.gps.LocManager$Result) -> b
com.nd.weather.widget.UI.weather.UIWeatherSetAty$4$1 -> com.nd.weather.widget.UI.weather.w:
    com.nd.weather.widget.UI.weather.UIWeatherSetAty$4 this$1 -> kB
    com.nd.calendar.module.gps.LocManager$Result val$location -> fK
    void run() -> run
com.nd.weather.widget.UI.weather.UIWeatherSetAty$4$1$1 -> com.nd.weather.widget.UI.weather.x:
    com.nd.weather.widget.UI.weather.UIWeatherSetAty$4$1 this$2 -> kC
    boolean val$result -> kD
    com.calendar.CommData.CityStruct val$m_cityInfo -> kE
    void run() -> run
com.nd.weather.widget.UI.weather.UIWeatherSetAty$4$2 -> com.nd.weather.widget.UI.weather.y:
    com.nd.weather.widget.UI.weather.UIWeatherSetAty$4 this$1 -> kB
    void run() -> run
com.nd.weather.widget.UI.weather.UIWeatherSetAty$MyListViewListener -> com.nd.weather.widget.UI.weather.z:
    com.nd.weather.widget.UI.weather.UIWeatherSetAty this$0 -> kA
    void OnDrop(int,int) -> a
com.nd.weather.widget.UI.weather.UIWidgetCityMgrAty -> com.nd.weather.widget.UI.weather.UIWidgetCityMgrAty:
    android.widget.GridView m_gvHotCity -> kF
    com.nd.calendar.Control.CityListAdapter m_adapterHotCity -> ji
    android.widget.ListView mlvSreach -> kG
    android.widget.EditText metSreach -> kH
    com.nd.calendar.module.ICoustoModule m_DbMdl -> jK
    com.nd.calendar.module.IUserModule m_userMdl -> kI
    java.util.ArrayList mSearchList -> kJ
    java.util.ArrayList mCitylist -> kK
    android.os.Handler mHandler -> mHandler
    void onCreate(android.os.Bundle) -> onCreate
    void initData() -> cn
    void delCityInList(java.util.List,com.calendar.CommData.CityInfo) -> a
    void AddCity(com.calendar.CommData.CityStruct,int) -> a
    void SearchCity(java.lang.String) -> aC
    void convert(java.util.List,java.util.List) -> a
    void CommitResult(com.calendar.CommData.CityStruct) -> b
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void onClick(android.view.View) -> onClick
    com.nd.calendar.module.IUserModule access$0(com.nd.weather.widget.UI.weather.UIWidgetCityMgrAty) -> a
    android.widget.EditText access$1(com.nd.weather.widget.UI.weather.UIWidgetCityMgrAty) -> b
    java.util.ArrayList access$2(com.nd.weather.widget.UI.weather.UIWidgetCityMgrAty) -> c
    void access$3(com.nd.weather.widget.UI.weather.UIWidgetCityMgrAty,com.calendar.CommData.CityStruct) -> a
com.nd.weather.widget.UI.weather.UIWidgetCityMgrAty$1 -> com.nd.weather.widget.UI.weather.A:
    com.nd.weather.widget.UI.weather.UIWidgetCityMgrAty this$0 -> kL
    void handleMessage(android.os.Message) -> handleMessage
com.nd.weather.widget.UI.weather.UIWidgetCityMgrAty$2 -> com.nd.weather.widget.UI.weather.B:
    com.nd.weather.widget.UI.weather.UIWidgetCityMgrAty this$0 -> kL
    void run() -> run
com.nd.weather.widget.UI.weather.UIWidgetCityMgrAty$3 -> com.nd.weather.widget.UI.weather.C:
    com.nd.weather.widget.UI.weather.UIWidgetCityMgrAty this$0 -> kL
    void gotLocation(com.nd.calendar.module.gps.LocManager$Result) -> b
com.nd.weather.widget.UI.weather.UIWidgetCityMgrAty$4 -> com.nd.weather.widget.UI.weather.D:
    com.nd.weather.widget.UI.weather.UIWidgetCityMgrAty this$0 -> kL
    void run() -> run
com.nd.weather.widget.UI.weather.UIWidgetCityMgrAty$5 -> com.nd.weather.widget.UI.weather.E:
    com.nd.weather.widget.UI.weather.UIWidgetCityMgrAty this$0 -> kL
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.nd.weather.widget.UI.weather.UIWidgetCityMgrAty$6 -> com.nd.weather.widget.UI.weather.F:
    com.nd.weather.widget.UI.weather.UIWidgetCityMgrAty this$0 -> kL
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
com.nd.weather.widget.UI.weather.UIWidgetCityMgrAty$7 -> com.nd.weather.widget.UI.weather.G:
    com.nd.weather.widget.UI.weather.UIWidgetCityMgrAty this$0 -> kL
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.nd.weather.widget.UI.weather.UIWidgetCityMgrAty$GPSThread -> com.nd.weather.widget.UI.weather.H:
    com.nd.calendar.module.gps.LocManager$Result location -> kM
    com.nd.weather.widget.UI.weather.UIWidgetCityMgrAty this$0 -> kL
    void run() -> run
com.nd.weather.widget.WeatherLinkTools -> com.nd.weather.widget.g:
    com.nd.weather.widget.WeatherLinkTools _instance -> kN
    android.content.Context mContext -> mContext
    android.content.Context mCtxSetting -> kO
    android.content.Context mCtxCalendar -> kP
    java.lang.String mCfgPrefName -> kQ
    java.lang.String mSkinSettingName -> kR
    java.lang.reflect.Method mMtdUpdate -> kS
    int mCalVer -> kT
    boolean bLinked -> kU
    com.nd.weather.widget.WeatherLinkTools getInstance(android.content.Context) -> w
    android.content.Context getCalendarContext(boolean) -> h
    void restoreSelf() -> cr
    boolean canLink() -> cs
    boolean canLink_2_7_0() -> ct
    android.content.res.AssetManager getLinkAssetManager() -> cu
    boolean canLink(android.content.Context) -> x
    java.io.InputStream getCalendarRes(java.lang.String) -> aD
    void localCity() -> cv
    void autoUpdateFirstWeather$1385ff() -> cw
    android.content.Intent getWeatherIntent() -> cx
    android.content.Intent getCityMgrIntent() -> cy
    android.content.Intent getCalendarIntent() -> cz
    void startWeatherPage() -> cA
    int getFirstCityID() -> cB
    boolean setFirstCityID(int) -> s
    void setWidgetState(int,int,boolean) -> a
    java.lang.String getWidgetPandaSkinPath() -> cC
    android.content.SharedPreferences getSetting(java.lang.String) -> aE
com.nd.weather.widget.WidgetBaseService -> com.nd.weather.widget.WidgetBaseService:
    java.lang.Class[] mSetForegroundSignature -> kV
    java.lang.reflect.Method mSetForeground -> kW
    java.lang.Object[] mSetForegroundArgs -> kX
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void stopForegroundCompat$13462e() -> cD
    void doForeground() -> cE
com.nd.weather.widget.WidgetGlobal -> com.nd.weather.widget.h:
    java.lang.String msResolution -> kY
    java.lang.String WIDGET_HOTAREA_RECEIVER -> kZ
    java.lang.String sAskAction -> la
    boolean updateWidgets(android.content.Context) -> y
    boolean updateWidgets(android.content.Context,int) -> updateWidgets
    java.lang.String GetResolution(android.content.Context) -> z
    void startCalendarService(android.content.Context) -> A
    void askPandaTheme(android.content.Context) -> B
    void setWidgetSkin(android.content.Context,java.lang.String,boolean) -> b
com.nd.weather.widget.WidgetTask -> com.nd.weather.widget.i:
    android.content.Context mContext -> mContext
    com.nd.calendar.Control.ICalendarContext mCalCxt -> lb
    java.lang.Integer iBuilder -> lc
    boolean bSkinChanged -> ld
    com.nd.weather.widget.skin.WidgetSkinBuilder mWidgetSkinBuilder -> le
    com.calendar.CommData.CityWeatherInfo mCityWeather -> lf
    com.nd.weather.widget.WidgetTask$WidgetUpdateInterface mWidgetUpdateInf -> fq
    com.nd.calendar.module.WeatherModule weatherModle -> co
    boolean mUpdating -> u
    boolean bFailure -> lg
    void SetBaseData(android.content.Context,int,com.nd.weather.widget.WidgetTask$WidgetUpdateInterface) -> a
    void setUpdateState$1385ff() -> cF
    boolean isFailure() -> isFailure
    void setSkinChanged() -> cG
    void builderAgain() -> cH
    void run() -> run
com.nd.weather.widget.WidgetTask$WidgetUpdateInterface -> com.nd.weather.widget.j:
    com.nd.weather.widget.skin.WidgetLoadedSkinInfo loadSkin(boolean) -> g
    boolean setWidgetSkin(android.graphics.Bitmap) -> a
com.nd.weather.widget.WidgetUtils -> com.nd.weather.widget.k:
    boolean mbShowTips -> lh
    void notifyWidgetTimeChanged(android.content.Context) -> C
    void sendBroadcast(android.content.Context,int) -> e
    android.content.SharedPreferences getSetting(android.content.Context,java.lang.String) -> e
    void showSkinTips(android.content.Context,int) -> f
    void statWidget(android.content.Context,java.lang.String) -> f
com.nd.weather.widget.skin.DrawImageInfo -> com.nd.weather.widget.skin.a:
    boolean NeedScale -> li
    java.lang.String FileName -> lj
com.nd.weather.widget.skin.DrawInfoBase -> com.nd.weather.widget.skin.b:
    android.graphics.Rect rect -> rect
    android.graphics.Rect rectHot -> lk
    java.lang.String Type -> aJ
    int emtType -> ll
com.nd.weather.widget.skin.DrawTextInfo -> com.nd.weather.widget.skin.c:
    int X -> lm
    int Y -> ln
    int Size -> lo
    int ShadowColor -> lp
    int ShadowBlurSize -> lq
    int ShadowOffsetX -> lr
    int ShadowOffsetY -> ls
    int nLenth -> lt
    boolean UseShadow -> lu
    java.lang.String TextKey -> lv
    int Color -> lw
    java.lang.String Align -> lx
com.nd.weather.widget.skin.WidgetLoadedSkinInfo -> com.nd.weather.widget.skin.d:
    com.nd.weather.widget.skin.WidgetSkinConfig skinConfig -> ly
    java.lang.String sLoadedSkinPath -> lz
    boolean bUserSkin -> lA
    android.content.res.AssetManager assetMgr -> lB
    int loadWidgetSkin(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> a
com.nd.weather.widget.skin.WidgetSkinBuilder -> com.nd.weather.widget.skin.e:
    android.content.Context mContext -> mContext
    com.nd.calendar.Control.CalendarContext mCalCxt -> lC
    android.content.res.AssetManager mAstMgr -> lD
    android.content.res.Resources mRes -> hz
    int mWidgetType -> eZ
    boolean bUpdating -> lE
    com.nd.weather.widget.skin.WidgetLoadedSkinInfo mWidgetSkinInfo -> lF
    android.graphics.Canvas canvas -> lG
    com.calendar.CommData.CityWeatherInfo m_cityWeather -> lH
    com.nd.weather.widget.WeatherLinkTools mWlt -> lI
    android.graphics.PaintFlagsDrawFilter pfdFilter -> lJ
    boolean mbNet -> lK
    int[] m_NumberIds -> lL
    java.lang.String[] TEXT_KEYS -> lM
    com.calendar.CommData.YjcInfo mYjcInfo -> lN
    boolean bHasCity -> lO
    com.calendar.CommData.DateInfo mDateInfo -> lP
    java.util.ArrayList mDays -> V
    java.lang.String[] lunarInfo -> lQ
    com.calendar.CommData.PMIndex$PMIndexInfo pmIndexInfo -> lR
    int getWigetType() -> cI
    void setUpdating(boolean) -> d
    void SetSkinInfo(com.nd.weather.widget.skin.WidgetLoadedSkinInfo) -> a
    void setWeatherInfo(com.calendar.CommData.CityWeatherInfo) -> h
    android.graphics.Bitmap getWidgetBitmap() -> cJ
    void safeCloseStream(java.io.Closeable) -> a
    com.calendar.CommData.YjcInfo getYiJiChong() -> cK
    java.lang.String getNightTemp(int) -> t
    java.lang.String getDayTemp(int) -> u
    boolean getLunarInfo() -> cL
    com.calendar.CommData.PMIndex$PMIndexInfo getPMInfo() -> cM
    java.lang.String getWidgetData(int) -> v
    void drawInputStream(java.io.InputStream,com.nd.weather.widget.skin.DrawImageInfo,android.graphics.Canvas) -> a
    boolean drawPicFile(java.lang.String,com.nd.weather.widget.skin.DrawImageInfo) -> a
    void drawNumber(int,com.nd.weather.widget.skin.DrawImageInfo) -> a
    void drawWeatherIco(java.lang.String,boolean,com.nd.weather.widget.skin.DrawImageInfo) -> a
    void DrawImage() -> cN
    void DrawText() -> cO
    boolean Is24Hour(android.content.Context) -> D
com.nd.weather.widget.skin.WidgetSkinConfig -> com.nd.weather.widget.skin.f:
    java.util.List mListTextItemInfo -> lS
    java.util.List mListDrawImageInfo -> lT
    java.util.List mListDraw -> lU
    int mHeight -> in
    int mWidth -> im
    boolean mbOutOfResolution -> lV
    boolean mUseOrgNumberIcon -> lW
    boolean mUseOrgWeahterIcon -> lX
    boolean mUseOrgBackgroud -> lY
    int mWeahterIconVer -> lZ
    int mNumberIconVer -> ma
    com.nd.weather.widget.skin.DrawImageInfo mDrawPictureBkInfo -> mb
    java.util.List getDrawTextInfoList() -> cP
    java.util.List getDrawImageInfoList() -> cQ
    int getWidgetHeight() -> cR
    int getWidgetWidth() -> cS
    boolean isUseOrgNumberIcon() -> cT
    boolean isUseOrgWeahterIcon() -> cU
    boolean isUseOrgBackgroud() -> cV
    int getHotElementFromPos(int,int) -> f
    boolean readXML(java.io.InputStream,java.lang.String,java.lang.String) -> a
    java.lang.String getCanvaSize(java.lang.String,java.lang.String,boolean) -> a
    boolean parserWidgetSkin(java.io.InputStream,java.lang.String,java.lang.String,java.lang.String) -> a
    int parseInt(java.lang.String) -> parseInt
    int parseInt$505cff29(java.lang.String) -> aF
thirdParty.WheelView.AbstractWheelAdapter -> thirdParty.WheelView.a:
    java.util.List datasetObservers -> mc
    android.view.View getEmptyItem(android.view.View,android.view.ViewGroup) -> a
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
thirdParty.WheelView.AbstractWheelTextAdapter -> thirdParty.WheelView.b:
    int textColor -> textColor
    int textSize -> textSize
    android.content.Context context -> fO
    android.view.LayoutInflater inflater -> md
    int itemResourceId -> me
    int itemTextResourceId -> mf
    int emptyItemResourceId -> mg
    void setTextColor$13462e() -> cW
    java.lang.CharSequence getItemText(int) -> w
    android.view.View getItem(int,android.view.View,android.view.ViewGroup) -> a
    android.view.View getEmptyItem(android.view.View,android.view.ViewGroup) -> a
    void configureTextView(android.widget.TextView) -> a
    android.widget.TextView getTextView(android.view.View,int) -> a
    android.view.View getView(int,android.view.ViewGroup) -> a
thirdParty.WheelView.ArrayWheelAdapter -> thirdParty.WheelView.c:
    java.lang.Object[] items -> mh
    java.lang.CharSequence getItemText(int) -> w
    int getItemsCount() -> cX
thirdParty.WheelView.ItemsRange -> thirdParty.WheelView.d:
    int first -> mi
    int count -> count
    int getFirst() -> cY
    int getLast() -> cZ
    int getCount() -> getCount
    boolean contains(int) -> x
thirdParty.WheelView.NumericWheelAdapter -> thirdParty.WheelView.e:
    int minValue -> mj
    int maxValue -> mk
    java.lang.String format -> ml
    java.lang.CharSequence getItemText(int) -> w
    int getItemsCount() -> cX
thirdParty.WheelView.OnWheelScrollListener -> thirdParty.WheelView.f:
    void onScrollingFinished(thirdParty.WheelView.WheelView) -> c
thirdParty.WheelView.WheelRecycle -> thirdParty.WheelView.g:
    java.util.List items -> mm
    java.util.List emptyItems -> mn
    thirdParty.WheelView.WheelView wheel -> mo
    int recycleItems(android.widget.LinearLayout,int,thirdParty.WheelView.ItemsRange) -> a
    android.view.View getItem() -> da
    android.view.View getEmptyItem() -> db
    void clearAll() -> clearAll
    java.util.List addView(android.view.View,java.util.List) -> a
    android.view.View getCachedView(java.util.List) -> i
thirdParty.WheelView.WheelScroller -> thirdParty.WheelView.h:
    thirdParty.WheelView.WheelScroller$ScrollingListener listener -> mp
    android.content.Context context -> fO
    android.view.GestureDetector gestureDetector -> mq
    android.widget.Scroller scroller -> mr
    int lastScrollY -> ms
    float lastTouchedY -> mt
    boolean isScrollingPerformed -> mu
    android.view.GestureDetector$SimpleOnGestureListener gestureListener -> mv
    int MESSAGE_SCROLL -> mw
    int MESSAGE_JUSTIFY -> mx
    android.os.Handler animationHandler -> my
    void scroll$255f295(int) -> y
    void stopScrolling() -> dc
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setNextMessage(int) -> z
    void clearMessages() -> dd
    void justify() -> de
    void startScrolling() -> df
    void finishScrolling() -> dg
    void access$0(thirdParty.WheelView.WheelScroller,int) -> a
    android.widget.Scroller access$1(thirdParty.WheelView.WheelScroller) -> a
    int access$2(thirdParty.WheelView.WheelScroller) -> b
    void access$3$3a4a1aab(thirdParty.WheelView.WheelScroller) -> c
    thirdParty.WheelView.WheelScroller$ScrollingListener access$4(thirdParty.WheelView.WheelScroller) -> d
    android.os.Handler access$5(thirdParty.WheelView.WheelScroller) -> e
    void access$6(thirdParty.WheelView.WheelScroller) -> f
thirdParty.WheelView.WheelScroller$1 -> thirdParty.WheelView.i:
    thirdParty.WheelView.WheelScroller this$0 -> mz
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
thirdParty.WheelView.WheelScroller$2 -> thirdParty.WheelView.j:
    thirdParty.WheelView.WheelScroller this$0 -> mz
    void handleMessage(android.os.Message) -> handleMessage
thirdParty.WheelView.WheelScroller$ScrollingListener -> thirdParty.WheelView.k:
    void onScroll(int) -> A
    void onStarted() -> dh
    void onFinished() -> di
    void onJustify() -> dj
thirdParty.WheelView.WheelView -> thirdParty.WheelView.WheelView:
    int[] SHADOWS_COLORS -> mA
    float shadowsScale -> mB
    int currentItem -> mC
    int visibleItems -> mD
    int itemHeight -> mE
    android.graphics.drawable.Drawable centerDrawable -> mF
    android.graphics.drawable.GradientDrawable topShadow -> mG
    android.graphics.drawable.GradientDrawable bottomShadow -> mH
    thirdParty.WheelView.WheelScroller scroller -> mI
    boolean isScrollingPerformed -> mu
    int scrollingOffset -> mJ
    boolean isCyclic -> mK
    android.widget.LinearLayout itemsLayout -> mL
    int firstItem -> mM
    thirdParty.WheelView.WheelViewAdapter viewAdapter -> mN
    thirdParty.WheelView.WheelRecycle recycle -> mO
    java.util.List changingListeners -> mP
    java.util.List scrollingListeners -> mQ
    java.util.List clickingListeners -> mR
    thirdParty.WheelView.WheelScroller$ScrollingListener scrollingListener -> mS
    android.database.DataSetObserver dataObserver -> mT
    void initData$faab20d() -> dk
    void setVisibleItems(int) -> B
    thirdParty.WheelView.WheelViewAdapter getViewAdapter() -> dl
    void setViewAdapter(thirdParty.WheelView.WheelViewAdapter) -> a
    void addScrollingListener(thirdParty.WheelView.OnWheelScrollListener) -> a
    void notifyScrollingListenersAboutStart() -> dm
    void notifyScrollingListenersAboutEnd() -> dn
    int getCurrentItem() -> bv
    void setCurrentItem(int,boolean) -> a
    void setCurrentItem(int) -> p
    boolean isCyclic() -> do
    void setCyclic(boolean) -> i
    void invalidateWheel(boolean) -> j
    int getItemHeight() -> dp
    int calculateLayoutWidth(int,int) -> g
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void layout(int,int) -> h
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void createItemsLayout() -> dq
    boolean addViewItem(int,boolean) -> b
    boolean isValidItemIndex(int) -> C
    void setShadowsScale$133aeb() -> dr
    void access$0(thirdParty.WheelView.WheelView,boolean) -> a
    void access$1(thirdParty.WheelView.WheelView,int) -> a
    int access$2(thirdParty.WheelView.WheelView) -> d
    void access$3(thirdParty.WheelView.WheelView,int) -> b
    thirdParty.WheelView.WheelScroller access$4(thirdParty.WheelView.WheelView) -> e
    boolean access$5(thirdParty.WheelView.WheelView) -> f
thirdParty.WheelView.WheelView$1 -> thirdParty.WheelView.l:
    thirdParty.WheelView.WheelView this$0 -> mU
    void onStarted() -> dh
    void onScroll(int) -> A
    void onFinished() -> di
    void onJustify() -> dj
thirdParty.WheelView.WheelView$2 -> thirdParty.WheelView.m:
    thirdParty.WheelView.WheelView this$0 -> mU
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
thirdParty.WheelView.WheelViewAdapter -> thirdParty.WheelView.n:
    int getItemsCount() -> cX
    android.view.View getItem(int,android.view.View,android.view.ViewGroup) -> a
    android.view.View getEmptyItem(android.view.View,android.view.ViewGroup) -> a
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
